CREATE OR REPLACE 
PACKAGE BODY PCRD_IPM_OUTGOING_FINANC_1240 IS
---------------------------------------------------------------------------------------------------------------------------
-- VERSION     DATE        RESPONSIBLE         COMMENT
-- -------     -------     -----------         ---------------------------------------------------------------------------
-- 2.7.1       15/05/2006  M.C                 ENG GCMS 06.1 (REF MC150506)
-- 2.7.2       25/05/2006  M.C                 E-COMMERCE (REF MC25052006)
-- 2.7.3       24/07/2006  H.ELMAGHRAOUI       ENH-IPM-OCTOBRE-2006
-- 2.7.4       23/10/2006  M.J                 NE PAS ENVOYER LE DE040 SI LE SERVICE_CODE EST NULL (SEE MJ20061023)
-- 2.8.8       27/12/2006  Y.LAMRANI           CORRECTION DU CHAMP DE40 SERVICE CODE SEE YL27122006.
-- 2.8.9       20/02/2007  Y.LAMRANI           NE PAS ENVOYER LE CHAMP 55(I.E : NE PAS CHERCHER LE RECORD TRX_HIST_ADD_CHIP)
--                                             SI LA TRX EST REVERSAL  SEE :YL20022007
-- 2.8.10                  ENH                 SEE HAJAR070307
-- 2.9.1       11/09/07    H.ELMAGHRAOUI       SEE ENH-GCMS-7.2
-- 2.9.2       19/09/2007  M.JENNANE           SEE MJ20070919
-- 2.9.3       16/11/2007  M.JENNANE           ECOMM SEE MJ20071116
-- 2.9.4       18/05/2008  Y.LAMRANI           CORRECTION PDS158 SEE YL18052008
-- 2.9.5       31/08/2008  ENH                 SEE ENH GCMS 8.2
-- 2.9.6       21/01/10    I.TOUIMEER          ORA-06502: PL/SQL: NUMERIC OR VALUE ERROR: HEX TO RAW CONVERSION ERROR SEE ITR210110
-- 3.0.1       30/08/2011  A.TAHSI             _357
-- 3.0.1       23/01/2012    M.OUAHDANE        SEE MOU20120123 : INT¿GRATION DES MODIFS FAITES DANS LE PROJET ARKEA SUR LA GESTION DES REJETS IPM
-- 3.0.2       25/04/2012  A.TAHSI             GESTION TRANSACTION AIRLINE (S'INSPIRER DE L'ENV JCC)  (SEE ATH25042012)
-- 3.0.3       17/07/2012  M.BENHAMMOU         MBH17072012: ANOMALIE_29984
-- 3.0.4       28/08/2012  A.TAHSI             ATH28082012:PREPARATION CRE OUTGOING
-- 3.0.5       10/09/2012  A.TAHSI             CORRECT THE VALUE OF THE PDS 0210 SEE SLA280312
-- 3.0.6       19/10/2012  A.TAHSI             ADD THE VAT PROGRAM WHEN APPLICABLE--SEE ATH19102012
-- 3.0.7       23/11/2012  A.TAHSI             ATH23112012: ENH12.2 DE043
-- 3.0.8       18/03/2013  A.TAHSI             ATH18032013 (ROUTAGE FLUX DONN¿ES IPM)
-- 3.0.9       22/04/2013  A.TAHSI             SEE ATH22042013
-- 3.0.10      21/06/2013  A.TAHSI             SEE ATH21062013 (ANOMALIE 38134)
-- 3.0.11      19/11/2013  A.TAHSI             SEE ATH19112013 (ANOMALIE #39780)
-- 3.0.12      21/01/14    S.LAASLI            INTERCHANGE 14.1 SEE SLA210114
-- 3.0.15      15/03/2014  A.TAHSI             ANOMALIE #41810, ANOMALIE #41834 (ATH15032014)
-- 3.0.16      16/05/2014  A.TAHSI             ANOMALIE #42574  (SEE ATH16052014)
-- 3.0.17      13/10/2015  M.BENHAMMOU         MBH13102015 - MCI_04_OUTGOING_FINANCIAL REPORT
-- 3.0.25      12/07/2021  H.ZADOUSSI          SEE 21Q4_4747     PROD00078531 ENH MASTERCARD 21Q4 - AN 4747

----------------------------------------------------------------------------------------------------------------------
PROCEDURE   VERSION IS
BEGIN
  PCRD_GENERAL_TOOLS_4.GET_PKG_VERSION ('V 223.01 09/09/2006 MAHA');
END VERSION;
-------------------------------------------------------------------------------------------------------------------------------
FUNCTION GENERATE_IPM_ADDEN_CORPORATE(  P_GLOBAL_INFORMATION    IN OUT  NOCOPY PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION,
                                        P_IPM_OUTGOING_TABLE    IN OUT  NOCOPY IPM_OUTGOING_TABLE%ROWTYPE )
                                        RETURN PLS_INTEGER IS

V_IPM_PDS_SET                           PCRD_IPM_GLOBAL_VARS.PDS_SET;
V_PDS_ITEMS                             VARCHAR2(999);
V_BIT_MAP_STRING                        VARCHAR2(512);
RETURN_STATUS                           PLS_INTEGER;
V_ENV_INFO_TRACE                        GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;

BEGIN
    -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  GLOBAL_VARS.ML_IPM;
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  $$PLSQL_UNIT;
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'GENERATE_IPM_ADDEN_CORPORATE';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------

    P_IPM_OUTGOING_TABLE.TRANSACTION_CODE_MTI       := '1644';
    P_IPM_OUTGOING_TABLE.FUNCTION_CODE_DE024        := '696';
    P_IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071       := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;

    V_IPM_PDS_SET(0191).TAG         := '0191';
    V_IPM_PDS_SET(0191).TAG_LENGTH  := 1;
    --V_IPM_PDS_SET(0191).TAG_DATA    := '1';
    V_IPM_PDS_SET(0191).TAG_DATA    := '2'; --SLA280312
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0191).TAG;

    V_IPM_PDS_SET(0501).TAG         := '0501';
    V_IPM_PDS_SET(0501).TAG_LENGTH  := 16;
    V_IPM_PDS_SET(0501).TAG_DATA    := '98000001'||TO_CHAR(P_IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071 - 1,'FM00000000');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0501).TAG;

--H.Z310505
/*    V_IPM_PDS_SET(0595).TAG         := '0595';
    V_IPM_PDS_SET(0595).TAG_LENGTH  := 4;
    V_IPM_PDS_SET(0595).TAG_DATA    := P_IPM_OUTGOING_TABLE.CARD_ACC_BUSINESS_CODE_DE026;
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0595).TAG;*/

    V_IPM_PDS_SET(0595).TAG         := '0595';
    V_IPM_PDS_SET(0595).TAG_LENGTH  := 8;
    V_IPM_PDS_SET(0595).TAG_DATA    := '2000RNNN';--ENH-GCMS-7.2 '2000NNNN';
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0595).TAG;

/*    V_IPM_PDS_SET(0596).TAG         := '0596';
    V_IPM_PDS_SET(0596).TAG_LENGTH  := 4;
    V_IPM_PDS_SET(0596).TAG_DATA    := 'TAX7';
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0596).TAG;*/

    V_IPM_PDS_SET(0596).TAG         := '0596';
    V_IPM_PDS_SET(0596).TAG_LENGTH  := 21;
    V_IPM_PDS_SET(0596).TAG_DATA    := RPAD(' ',20,' ')||'R'; --ENH-GCMS-7.2 RPAD('0', 20, '0') || 'Y';
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0596).TAG;

    V_IPM_PDS_SET(0597).TAG         := '0597';
    V_IPM_PDS_SET(0597).TAG_LENGTH  := 14; --ENH-IPM-APRIL-2005
    V_IPM_PDS_SET(0597).TAG_DATA    := TO_CHAR(P_IPM_OUTGOING_TABLE.AMOUNT_TRANSACTION_DE004*0.07,'FM000000000000')||'2D';
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0597).TAG;

    RETURN_STATUS := PCRD_IPM_TOOLS_3.PDS_SET_ASSEMBLER  (   V_IPM_PDS_SET,
                                                            V_PDS_ITEMS  ,
                                                            P_IPM_OUTGOING_TABLE.ADDITIONAL_DATA_DE048);
    IF (RETURN_STATUS <> DECLARATION_CST.OK)
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_TOOLS_3.PDS_SET_ASSEMBLER';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN( DECLARATION_CST.ERROR );
    END IF;

    IF P_IPM_OUTGOING_TABLE.TRANSACTION_LIF_CYC_ID_DE063 IS NOT NULL
    THEN
        V_BIT_MAP_STRING := ' 024 032 033 048 063 071 094 ';
    ELSE
        V_BIT_MAP_STRING := ' 024 032 033 048 071 094 ';
    END IF;

    RETURN_STATUS := PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP(   V_BIT_MAP_STRING,
                                                        P_IPM_OUTGOING_TABLE.BIT_MAP_1_DE000,
                                                        P_IPM_OUTGOING_TABLE.BIT_MAP_2_DE001);
    IF (RETURN_STATUS <> DECLARATION_CST.OK)
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN( DECLARATION_CST.ERROR );
    END IF;

    P_IPM_OUTGOING_TABLE.FILE_NAME_DE101 := P_GLOBAL_INFORMATION.FILE_NAME;

    RETURN_STATUS := PCRD_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE ( P_IPM_OUTGOING_TABLE );
    IF ( RETURN_STATUS <> DECLARATION_CST.OK )
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING HPS_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN( DECLARATION_CST.ERROR );
    END IF;

    P_GLOBAL_INFORMATION.MESSAGE_NUMBER    := P_GLOBAL_INFORMATION.MESSAGE_NUMBER  + 1;

    RETURN(DECLARATION_CST.OK);

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE       :=  NULL;
    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    RETURN( DECLARATION_CST.ERROR );

END GENERATE_IPM_ADDEN_CORPORATE ;

-------------------------------------------------------------------------------------------------------------------------
FUNCTION        GENERATE_IPM_1240   (   P_GLOBAL_INFORMATION            IN OUT  NOCOPY  PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION,
                                        P_TRANSACTION_HIST_REC          IN OUT  NOCOPY  TRANSACTION_HIST%ROWTYPE, --AEZ18012023
                                        P_TRANSACTION_HIST_AD_CHIP_REC  IN              TRANSACTION_HIST_ADD_CHIP%ROWTYPE,
                                        P_MERCHANT_REC                  IN              MERCHANT%ROWTYPE    --ATH19102012
                                        )
                                        RETURN PLS_INTEGER IS

V_IPM_OUTGOING_TABLE_REC                IPM_OUTGOING_TABLE%ROWTYPE;
V_ENV_INFO_TRACE                        GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;
RETURN_STATUS                           PLS_INTEGER;
V_FEE_PROCESSING_CODE                   CHAR(2);
V_FEE_CURRENCY                          CHAR(3);
V_INTERCH_FEES                          CHAR(8);
V_BIT_MAP_STRING                        VARCHAR2(512);
V_FEE_CURRENCY_EXP                      TRANSACTION_HIST.SETTLEMENT_CURRENCY_EXP%TYPE;
V_CATEG_TERM                            CHAR(1);
V_IPM_PDS_SET                           PCRD_IPM_GLOBAL_VARS.PDS_SET;
V_PDS_ITEMS                             VARCHAR2(999);
MOUCHARD                                NUMBER := 0;
V_MERCHANT_PROVINCE                     CHAR(3) := NULL;
V_MERCHANT_COUNTRY_CODE                 VARCHAR2(3):= NULL;
V_FIELD_055                             IPM_OUTGOING_TABLE.ICC_CHIP_DATA_DE055%TYPE;    --H.Z190505
V_FIELD_055_LENGTH                      PLS_INTEGER;
V_POS_DATA_OUT                          TRANSACTION_HIST.POS_DATA%TYPE;
V_TAG_LEN                               PLS_INTEGER;    --MC25052006
V_SECURITY_LEVEL_IND                    VARCHAR2(30);   --MC25052006
V_COUNTRY_RECORD                        COUNTRY%ROWTYPE; --LB140206
V_SERVICE_CODE_DE040                    IPM_OUTGOING_TABLE.SERVICE_CODE_DE040%TYPE := NULL;--MJ20061023
V_COLLECTION                            BOOLEAN := FALSE; --HAJAR070307
V_MCC_RECORD                            MCC%ROWTYPE;--MJ20070919

V_LENGTH                                VARCHAR2(3);   --ITR210110
--ATH25042012 START
V_MICROFILM_REF_SEQ                     TRANSACTION_HIST.MICROFILM_REF_SEQ%TYPE;
V_TRANSACTION_HIST_AL_REC               TRANSACTION_HIST_AL%ROWTYPE;
V_IPM_OUTG_TABLE_AD_TRIP_REC            IPM_OUTGOING_TABLE%ROWTYPE;
--ATH25042012 END
V_NETWORK_DATA                          VARCHAR2(30);--ATH23112012
V_WALLET_PROGRAM_DATA                   VARCHAR2(30);--SLA210114
V_MER_ADDITIONAL_DATA                   VARCHAR2(1000);--HSA15022021
V_MER_ORIGIN_COUNTRY                    VARCHAR2(3);--HSA15022021
V_ORIG_TRANSACTION_HIST_REC             TRANSACTION_HIST%ROWTYPE;--ATH19112013
V_RESUBMISSION_CODE                     VARCHAR2(1000);--21Q4_4747
V_VALUE                    VARCHAR2 (16);
-- START SLA_30042021_ICPS-562
V_UCAF                                   VARCHAR2(32);
V_PROGRAM_PROTOCOL_3DS                   CHAR(1)  ;
V_DIRECTORY_TRX_SERVER_ID_3DS            VARCHAR2(36);
-- END SLA_30042021_ICPS-562
V_EXPONENT_CHANGED                  BOOLEAN:=FALSE; --AEZ18012023
--START KEL20230119
V_ACC_URL_ADDRESS                       VARCHAR2(1000);
V_ACC_CUS_SERV_PHONE_NUMBER             VARCHAR2(1000);
V_ACC_PHONE_NUMBER                      VARCHAR2(1000);
V_ACC_ADD_CONTACT_INFO                  VARCHAR2(1000);
V_SERVICE_LOCATION                      VARCHAR2(1000);
--END KEL20230119
V_DCC_FLAG                      		VARCHAR2(15); -- OKH 30012021 ISSUE 127824:  DCC AUTHORISATION CURRENCY DISPLAY IN TRANSACTION HISTORY INCORRECT
--V_TAG_LEN                       		PLS_INTEGER;  -- OKH 30012021
BEGIN

    -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  GLOBAL_VARS.ML_IPM;
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  $$PLSQL_UNIT;
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'GENERATE_IPM_1240';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------

    V_IPM_OUTGOING_TABLE_REC           := NULL;
    V_PDS_ITEMS                        := NULL;

    --START HAJAR070307
    IF (P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'C')
      OR ( P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'S' AND P_TRANSACTION_HIST_REC.ORIGINE_CODE = '0')
      --OR ( P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'S' AND SUBSTR(P_GLOBAL_INFORMATION.CLEARING_CRITERIA,4,1) = 0   AND P_TRANSACTION_HIST_REC.ORIGINE_CODE = '3')--ATH22042013
    THEN
        V_COLLECTION := TRUE;
    END IF;
    -- END HAJAR070307

    --ATH19112013 START
    IF  P_TRANSACTION_HIST_REC.REVERSAL_FLAG    =   GLOBAL_VARS.REVERSAL
    THEN
        RETURN_STATUS   :=  PCRD_GET_DATA_TRANSACT_ROWS.GET_TRANSACTION_HIST    (   P_TRANSACTION_HIST_REC.ORIG_MICROFILM_REF_NUMBER,
                                                                                    P_TRANSACTION_HIST_REC.ORIG_MICROFILM_REF_SEQ,
                                                                                    V_ORIG_TRANSACTION_HIST_REC  );
        IF  RETURN_STATUS  <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE :=  'PCRD_GET_DATA_TRANSACT_ROWS.GET_TRANSACTION_HIST. '
                                               || '; MICROFILM REF NUMBER    =   ' ||  P_TRANSACTION_HIST_REC.ORIG_MICROFILM_REF_NUMBER
                                               || '; MICROFILM REF SEQ       =   ' ||  P_TRANSACTION_HIST_REC.ORIG_MICROFILM_REF_SEQ
                                               ;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN (RETURN_STATUS);
        END IF;
    END IF;
    --ATH19112013 END
        --AEZ18012023 START
    IF P_GLOBAL_INFORMATION.PROCESSING_DATE >= TO_DATE ('16/04/2023','DD/MM/YYYY')
    THEN
        IF P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY=GLOBAL_VARS_3.ICELAND_KRONA_CCY AND P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP <> 0
        THEN
            P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP := 0;
            P_TRANSACTION_HIST_REC.TRANSACTION_AMOUNT       := ROUND(P_TRANSACTION_HIST_REC.TRANSACTION_AMOUNT,P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP);
            P_TRANSACTION_HIST_REC.CASH_BACK_AMOUNT         := ROUND(P_TRANSACTION_HIST_REC.CASH_BACK_AMOUNT,P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP);
            V_EXPONENT_CHANGED                              := TRUE;
        END IF;

        IF P_TRANSACTION_HIST_REC.BILLING_CURRENCY=GLOBAL_VARS_3.ICELAND_KRONA_CCY AND P_TRANSACTION_HIST_REC.BILLING_CURRENCY_EXP <> 0
        THEN
            P_TRANSACTION_HIST_REC.BILLING_CURRENCY_EXP := 0;
            P_TRANSACTION_HIST_REC.BILLING_AMOUNT       := ROUND(P_TRANSACTION_HIST_REC.BILLING_AMOUNT,P_TRANSACTION_HIST_REC.BILLING_CURRENCY_EXP);
        END IF;
    END IF;
    --AEZ18012023 END
    V_IPM_OUTGOING_TABLE_REC.TRANSACTION_CODE_MTI                := '1240';
    V_IPM_OUTGOING_TABLE_REC.PRIMARY_ACCOUNT_NUMBER_DE002        := P_TRANSACTION_HIST_REC.CARD_NUMBER;
	-- START ENH-IPM-OCTOBRE-2006
    RETURN_STATUS := PCRD_IPM_TOOLS_3.MAP_PWC_MCI_DE3(  P_TRANSACTION_HIST_REC.TRANSACTION_CODE,
                                                        P_TRANSACTION_HIST_REC.PROCESSING_CODE,
                                                        P_TRANSACTION_HIST_REC.MCC,
                                                        V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003);
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := ':ERROR RETURNED BY PCRD_IPM_TOOLS_3.MAP_PWC_MCI_DE3';
        PCRD_GENERAL_TOOLS.PUT_TRACES  (V_ENV_INFO_TRACE,   $$PLSQL_LINE );
        RETURN (RETURN_STATUS);
    END IF;

    /*IF    ( P_TRANSACTION_HIST_REC.TRANSACTION_CODE         = GLOBAL_VARS.TC_PURCHASE )
    THEN
        V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003 := '000000';
    ELSIF ( P_TRANSACTION_HIST_REC.TRANSACTION_CODE         = GLOBAL_VARS.TC_WITHDRAWAL )
    THEN
        V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003 := '010000';
    ELSIF ( P_TRANSACTION_HIST_REC.TRANSACTION_CODE         = GLOBAL_VARS.TC_CASH )
    THEN
        V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003 := '120000';
    ELSIF ( P_TRANSACTION_HIST_REC.TRANSACTION_CODE         = GLOBAL_VARS.TC_UNIQUE )
    THEN
        V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003 := '180000';
    ELSIF ( P_TRANSACTION_HIST_REC.TRANSACTION_CODE         = GLOBAL_VARS.TC_CREDIT_VOUCHER )
    THEN
        V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003 := '200000';
    END IF;

    IF ( P_TRANSACTION_HIST_REC.MCC IN ( '4829', '6051', '7511', '7995' ) )
      AND P_TRANSACTION_HIST_REC.TRANSACTION_CODE <> GLOBAL_VARS.TC_CREDIT_VOUCHER -- MAW20040512
    THEN
        V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003 := '180000';
    END IF;*/
	-- END ENH-IPM-OCTOBRE-2006
   	 
    ---IS CASHBACK
    /*IF P_TRANSACTION_HIST_REC.CASH_BACK_AMOUNT IS NOT NULL AND SUBSTR(V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003, 1, 2) = '00'
    THEN
        IF P_TRANSACTION_HIST_REC.CASH_BACK_AMOUNT > 0
        THEN
            V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003 := '09' || SUBSTR(V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003, 3, LENGTH(V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003));
        END IF;
    END IF;*/

    V_IPM_OUTGOING_TABLE_REC.AMOUNT_TRANSACTION_DE004            := P_TRANSACTION_HIST_REC.TRANSACTION_AMOUNT * POWER(10,P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP);
    V_IPM_OUTGOING_TABLE_REC.AMOUNT_RECONCILIATION_DE005         := P_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT  * POWER(10,P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY_EXP);

    IF (P_TRANSACTION_HIST_REC.AUTHO_FLAG    = '0')
    THEN
        V_IPM_OUTGOING_TABLE_REC.DATE_TIME_TRANSACTION_DE012     := TO_CHAR(NVL(P_TRANSACTION_HIST_REC.AUTHORIZATION_DATE, P_TRANSACTION_HIST_REC.TRANSACTION_DATE),'YYMMDDHH24MISS');
    ELSE
        V_IPM_OUTGOING_TABLE_REC.DATE_TIME_TRANSACTION_DE012     := TO_CHAR(NVL(P_TRANSACTION_HIST_REC.TRANSACTION_DATE, P_GLOBAL_INFORMATION.PROCESSING_DATE),'YYMMDDHH24MISS');
    END IF;
    IF ( P_TRANSACTION_HIST_REC.EXPIRY_DATE IS NOT NULL )
    THEN
        V_IPM_OUTGOING_TABLE_REC.DATE_EXPIRATION_DE014               := NVL(TO_CHAR(P_TRANSACTION_HIST_REC.EXPIRY_DATE,'YYMM'),'0000');
        V_BIT_MAP_STRING := V_BIT_MAP_STRING || ' 014';
    END IF;

    IF      ( P_TRANSACTION_HIST_REC.REMITTANCE_TYPE = 'A' -- 'ATM'
        AND   P_TRANSACTION_HIST_REC.TRANSACTION_CODE = '04')--'ATM'
    THEN
        V_CATEG_TERM := 'A';
    ELSIF   P_TRANSACTION_HIST_REC.REMITTANCE_TYPE = 'M' --'MANUAL'
    THEN
        V_CATEG_TERM := 'N';
    ELSE
        V_CATEG_TERM := 'P';
    END IF;
	--START MC04102005
	--    V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022                 := P_TRANSACTION_HIST_REC.POS_DATA; -- MC20050809
        RETURN_STATUS   :=  PCRD_IRI_CALCULATION.MAP_POS_DATA   (   P_TRANSACTION_HIST_REC.POS_DATA             ,
                                                                    P_TRANSACTION_HIST_REC.AUTHO_FLAG           ,
                                                                    P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE   ,
                                                                    V_POS_DATA_OUT                              );
        IF  RETURN_STATUS   <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR IN PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN  RETURN_STATUS;
        END IF;

    V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022                 :=  V_POS_DATA_OUT;

    --ATH15032014 START
    IF P_TRANSACTION_HIST_REC.CARD_SEQUENCE_NUMBER IS NOT NULL
    THEN
     --   V_IPM_OUTGOING_TABLE_REC.CARD_SEQUENCE_NUMBER_DE023 :=  P_TRANSACTION_HIST_REC.CARD_SEQUENCE_NUMBER; /*ABL30102019 REJECT IPM MCB*/
        V_IPM_OUTGOING_TABLE_REC.CARD_SEQUENCE_NUMBER_DE023 :=
                NVL (
                    LPAD (P_TRANSACTION_HIST_REC.CARD_SEQUENCE_NUMBER,
                          3,
                          '0'),
                    '001');
        V_BIT_MAP_STRING := V_BIT_MAP_STRING || ' 023';
    END IF;
    --ATH15032014 END

	-- START MC04102005
    V_IPM_OUTGOING_TABLE_REC.FUNCTION_CODE_DE024                 := '200';

    IF ( TRIM(P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE) IS NULL )
    THEN
        V_IPM_OUTGOING_TABLE_REC.MESSAGE_REASON_CODE_DE025           := '1400';
    ELSE
        IF ( P_TRANSACTION_HIST_REC.AUTHORIZATION_AMOUNT = P_TRANSACTION_HIST_REC.TRANSACTION_AMOUNT )
        THEN
            V_IPM_OUTGOING_TABLE_REC.MESSAGE_REASON_CODE_DE025           := '1401';
        ELSE
            V_IPM_OUTGOING_TABLE_REC.MESSAGE_REASON_CODE_DE025           := '1402';
        END IF;
    END IF;

    V_IPM_OUTGOING_TABLE_REC.CARD_ACC_BUSINESS_CODE_DE026        := P_TRANSACTION_HIST_REC.MCC;

    IF ( P_TRANSACTION_HIST_REC.TRANSACTION_CODE ='04' AND P_TRANSACTION_HIST_REC.MCC != '6011') OR
       ( P_TRANSACTION_HIST_REC.TRANSACTION_CODE ='03' AND P_TRANSACTION_HIST_REC.MCC NOT IN('6010','6012') )
    THEN
        V_ENV_INFO_TRACE.ERROR_CODE     := 'PWC-00074';
        V_ENV_INFO_TRACE.PARAM1         := 'TRANSACTION_CODE';
        V_ENV_INFO_TRACE.PARAM2         := 'MCC';
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'INCOMPATIBILITY BETWEEN TRANSACTION_CODE AND MCC';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN( DECLARATION_CST.ERROR );
    END IF;

	--ENH-IPM-APRIL-2005    V_IPM_OUTGOING_TABLE_REC.DATE_RECONCILIATION_DE028           := TO_CHAR(P_GLOBAL_INFORMATION.PROCESSING_DATE,'YYMMDD');
    V_IPM_OUTGOING_TABLE_REC.ACQUIRING_REFER_DATA_DE031          := P_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER;
    V_IPM_OUTGOING_TABLE_REC.ACQUIRING_INST_ID_CODE_DE032        := P_TRANSACTION_HIST_REC.ACQUIRER_ID;
    V_IPM_OUTGOING_TABLE_REC.FID_CODE_DE033                      := P_GLOBAL_INFORMATION.MEMBER_ICA;

    IF ( (TRIM(P_TRANSACTION_HIST_REC.REFERENCE_NUMBER) IS NOT NULL) AND (TRIM(P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE) IS NOT NULL)  )
    THEN
        V_IPM_OUTGOING_TABLE_REC.RETRIEVAL_REFERENCE_NB_DE037        := RPAD(NVL(P_TRANSACTION_HIST_REC.REFERENCE_NUMBER,' '),12);
        V_BIT_MAP_STRING := V_BIT_MAP_STRING || ' 037';
    END IF;

    IF      ( TRIM(P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE) IS NOT NULL )
        AND P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE   <>  '000000'        --H.Z010705
    THEN
        V_IPM_OUTGOING_TABLE_REC.APPROVAL_CODE_DE038            := RPAD(LTRIM(P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE),6);

        V_BIT_MAP_STRING := V_BIT_MAP_STRING || ' 038';
    END IF;

    --ATH21062013 START
    IF  P_TRANSACTION_HIST_REC.TERMINAL_ID IS NOT NULL
    THEN
        V_IPM_OUTGOING_TABLE_REC.CARD_ACCEPTOR_TERM_ID_DE041    :=  RPAD(SUBSTR(P_TRANSACTION_HIST_REC.TERMINAL_ID,1,8),8,' ');
        V_BIT_MAP_STRING := V_BIT_MAP_STRING || ' 041';
    END IF;
    --ATH21062013 END

    V_IPM_OUTGOING_TABLE_REC.CARD_ACCEPTOR_ID_CODE_DE042         := P_TRANSACTION_HIST_REC.OUTLET_NUMBER;

	--H.Z090605
	--    IF (SUBSTR(V_IPM_OUTGOING_TABLE_REC.ACQUIRING_REFER_DATA_DE031,1,2) = '67' )
	--H.Z010705
  IF SUBSTR(P_TRANSACTION_HIST_REC.PRIVATE_DATA_1,1,2)    =   '67'
    THEN
        V_MERCHANT_PROVINCE := P_TRANSACTION_HIST_REC.MERCHANT_COUNTRY_CODE;
    END IF;

        RETURN_STATUS   :=    PCRD_GET_PARAM_GENERAL_ROWS.GET_COUNTRY   (   P_TRANSACTION_HIST_REC.MERCHANT_COUNTRY_CODE,
                                                                        V_COUNTRY_RECORD,
                                                                        TRUE    );
    IF  RETURN_STATUS = DECLARATION_CST.ERROR
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR RETURNED BY PCRD_GET_PARAM_GENERAL_ROWS.GET_COUNTRY' ||
                                            'COUNTRY CODE =' || P_TRANSACTION_HIST_REC.MERCHANT_COUNTRY_CODE;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        IF(RETURN_STATUS = DECLARATION_CST.NOK)
        THEN
           V_ENV_INFO_TRACE.ERROR_CODE     := 'PWC-00004';
           V_ENV_INFO_TRACE.PARAM1         := 'COUNTRY';
           V_ENV_INFO_TRACE.PARAM2         := 'COUNTRY_CODE  = ' || P_TRANSACTION_HIST_REC.MERCHANT_COUNTRY_CODE;
           PCRD_GENERAL_TOOLS.PUT_TRACES  (V_ENV_INFO_TRACE,$$PLSQL_LINE );
        END IF;
        RETURN  RETURN_STATUS;
    END IF;
    /*DEBUT MODIF MJ20070919 CLEARING DATA INTEGRITY EDITS */
    IF  (       P_TRANSACTION_HIST_REC.MCC BETWEEN 3000 AND 3299
        OR      P_TRANSACTION_HIST_REC.MCC BETWEEN 3351 AND 3441
        OR      P_TRANSACTION_HIST_REC.MCC BETWEEN 3501 AND 3999
        OR      P_TRANSACTION_HIST_REC.MCC = 4511               )
    THEN
        RETURN_STATUS := PCRD_GET_PARAM_TRANSACT_ROWS.GET_MCC(  P_TRANSACTION_HIST_REC.MCC,
                                                                V_MCC_RECORD,
                                                                TRUE);
        IF  RETURN_STATUS = DECLARATION_CST.ERROR
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR RETURNED BY PCRD_GET_PARAM_GENERAL_ROWS.GET_MCC' ||
                                                'MCC =' || P_TRANSACTION_HIST_REC.MCC;
            PCRD_GENERAL_TOOLS.PUT_TRACES  (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN  RETURN_STATUS;
        END IF;

        V_IPM_OUTGOING_TABLE_REC.CARD_ACC_NAME_LOCATION_DE043 :=    RPAD(SUBSTR(NVL(V_MCC_RECORD.DESCRIPTION,' '),1,9),9,' ')
                                                                  ||' '
                                                                  ||SUBSTR(LTRIM(RTRIM(P_TRANSACTION_HIST_REC.MERCHANT_ACRONYM)),1,12);
    ELSE
        V_IPM_OUTGOING_TABLE_REC.CARD_ACC_NAME_LOCATION_DE043 :=    SUBSTR(LTRIM(RTRIM(P_TRANSACTION_HIST_REC.MERCHANT_ACRONYM)),1,22);
    END IF;

    V_IPM_OUTGOING_TABLE_REC.CARD_ACC_NAME_LOCATION_DE043 := V_IPM_OUTGOING_TABLE_REC.CARD_ACC_NAME_LOCATION_DE043
    --V_IPM_OUTGOING_TABLE_REC.CARD_ACC_NAME_LOCATION_DE043        := SUBSTR(LTRIM(RTRIM(P_TRANSACTION_HIST_REC.MERCHANT_ACRONYM)),1,22)
	/*FIN   MODIF MJ20070919 CLEARING DATA INTEGRITY EDITS */
                                                  ||'\'
                                                  --||SUBSTR(LTRIM(RTRIM(P_TRANSACTION_HIST_REC.MERCHANT_DESCRIPTION)),1,45)
                                                  ||SUBSTR(LTRIM(RTRIM(P_MERCHANT_REC.PR_LINE_1)),1,45)  --EDIT_5_INV_STREET_CORRECTION_ICPS-672_20210917
                                                  ||'\'
                                                  ||SUBSTR(LTRIM(RTRIM(P_TRANSACTION_HIST_REC.MERCHANT_CITY_NAME)),1,13)
                                                  ||'\'
                                                  ||RPAD(NVL( P_TRANSACTION_HIST_REC.MERCHANT_ZIP_CODE, '44776655'),10)  --TEMP CERTIF ZIP CODE
                                                  ||RPAD(NVL( V_MERCHANT_PROVINCE ,' '),3) ---P_TRANSACTION_HIST_REC.MERCHANT_COUNTRY
                                                  ||RPAD(NVL( V_COUNTRY_RECORD.ISO_COUNTRY_ALPHA,' '),3); -- LB130206

    V_IPM_OUTGOING_TABLE_REC.CCY_CODE_TRANSACTION_DE049          := P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY;

    IF  P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY <> P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY
    THEN
        V_FEE_CURRENCY                              := P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY    ;
        V_FEE_CURRENCY_EXP                          := P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY_EXP;
        V_INTERCH_FEES                              := TO_CHAR(P_TRANSACTION_HIST_REC.INTERCHANGE_FEES * POWER(10,NVL(V_FEE_CURRENCY_EXP,2)), 'FM00000000');
        V_IPM_OUTGOING_TABLE_REC.CCY_CODE_RECONCIL_DE050         := P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY;
    ELSE
        V_FEE_CURRENCY                              := P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY    ;
        V_FEE_CURRENCY_EXP                          := P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP;
        V_INTERCH_FEES                              := TO_CHAR(P_TRANSACTION_HIST_REC.INTERCHANGE_FEES * POWER(10,NVL(V_FEE_CURRENCY_EXP,2)),  'FM00000000');
        V_IPM_OUTGOING_TABLE_REC.CCY_CODE_RECONCIL_DE050         := P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY;
    END IF;

    IF V_INTERCH_FEES = 0 THEN
        V_FEE_PROCESSING_CODE := 'D';
    END IF;

		
    ---ATH23102019 START
    IF SUBSTR(V_IPM_OUTGOING_TABLE_REC.PROCESSING_CODE_DE003, 1, 2) =  '09'     ---IS CASHBACK
    THEN
        V_IPM_OUTGOING_TABLE_REC.AMOUNTS_ADDITIONAL_DE054    := '00'                   --ADDITIONAL AMOUNT,ACCOUNT TYPE
                                                                ||'40'                 --CASHBASCK
                                                                ||P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY   --LOCAL CURRENCY CODE
                                                                ||P_TRANSACTION_HIST_REC.TRANSACTION_SIGN       --AMOUNT SIGN
                                                                ||TO_CHAR(P_TRANSACTION_HIST_REC.CASH_BACK_AMOUNT * POWER(10,P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP),'FM000000000000');
        V_BIT_MAP_STRING := V_BIT_MAP_STRING || ' 054';
    END IF;
    ---ATH23102019 END
	---CDU20191202
	
	
	--DEBUT MODIF H.Z190505

    IF  P_TRANSACTION_HIST_REC.ADDENDUM_CHIP_DATA   =   GLOBAL_VARS.YES
    THEN
        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_APPLICATION_CRYPTOGRAM IS NOT NULL )
        THEN
            V_FIELD_055         :=  '9F26' || '08' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_APPLICATION_CRYPTOGRAM;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CRYPTOGRAM_INFO_DATA IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F27' || '01' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CRYPTOGRAM_INFO_DATA;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_ISSUER_APPLICATION_DATA IS NOT NULL )
        THEN

        -- START ITR210110
        BEGIN

            SELECT RAWTOHEX(CHR(LENGTH(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_ISSUER_APPLICATION_DATA)/2))
            INTO    V_LENGTH
            FROM    DUAL;

        EXCEPTION
        WHEN OTHERS THEN
            --START MBH26082011
            V_ENV_INFO_TRACE.ERROR_CODE     := 'PWC-00021';
            V_ENV_INFO_TRACE.PARAM1         := 'SELECT RAWTOHEX(CHR(LENGTH(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_ISSUER_APPLICATION_DATA)/2)) FROM DUAL';
            --END MBH26082011
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR V_LENGTH :'
                                                ||  P_TRANSACTION_HIST_AD_CHIP_REC.MICROFILM_REF_NUMBER;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN  ( DECLARATION_CST.ERROR );
        END;
        -- END ITR210110

            V_FIELD_055     :=     V_FIELD_055     || '9F10'
                                --|| TO_CHAR(LENGTH(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_ISSUER_APPLICATION_DATA)/2,'FM00')
                                || SUBSTR(V_LENGTH,1,2) -- ITR210110
                                || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_ISSUER_APPLICATION_DATA;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_UNPREDICTABLE_NUMBER IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F37' || '04' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_UNPREDICTABLE_NUMBER;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_ATC IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F36' || '02' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_ATC;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TVR IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '95' || '05' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TVR;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_DATE IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9A' || '03' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_DATE;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_TYPE IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9C' || '01' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_TYPE;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_AMOUNT IS NOT NULL )
        THEN

            V_FIELD_055     :=     V_FIELD_055     || '9F02' || '06' || LPAD(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_AMOUNT,12,'0');
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_CURRENCY_CODE IS NOT NULL )
        THEN

            V_FIELD_055     :=     V_FIELD_055     || '5F2A' || '02' || LPAD(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRANSACTION_CURRENCY_CODE,4,'0');
        END IF;

        IF  P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_AIP IS NOT NULL
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '82' || '02' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_AIP;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TERMINAL_COUNTRY_CODE IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F1A' || '02' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TERMINAL_COUNTRY_CODE;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_OTHER_AMOUNT IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F03' || '06' || LPAD(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_OTHER_AMOUNT,12,'0');
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CVM_RESULTS IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F34' || '03' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CVM_RESULTS;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TERMINAL_CAPABILITY IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F33' || '03' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TERMINAL_CAPABILITY;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TERMINAL_TYPE IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F35' || '01' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TERMINAL_TYPE;
        END IF;
--ASE17122013
/*
        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_IFD_SERIAL_NUMBER      IS NOT NULL )
        THEN

        -- START ITR210110
        BEGIN
            V_LENGTH :=NULL;

            SELECT RAWTOHEX(CHR(LENGTH(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_IFD_SERIAL_NUMBER)))
            INTO    V_LENGTH
            FROM    DUAL;

        EXCEPTION
        WHEN OTHERS THEN
            --START MBH26082011
            V_ENV_INFO_TRACE.ERROR_CODE     := 'PWC-00021';
            V_ENV_INFO_TRACE.PARAM1         := 'SELECT RAWTOHEX(CHR(LENGTH(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_IFD_SERIAL_NUMBER))) FROM DUAL';
            --END MBH26082011
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR V_LENGTH :'
                                                ||  P_TRANSACTION_HIST_AD_CHIP_REC.MICROFILM_REF_NUMBER;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN  ( DECLARATION_CST.ERROR );
        END;
        -- END ITR210110

            V_FIELD_055     := V_FIELD_055  || '9F1E'
                            --|| TO_CHAR(LENGTH(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_IFD_SERIAL_NUMBER)/2,'FM00')
                            || SUBSTR(V_LENGTH,1,2) -- ITR210110
                            || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_IFD_SERIAL_NUMBER;
        END IF;
*/



        /*START STAB TEAM 13012022*/
        IF (P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CATEGORY_CODE IS NOT NULL)
            THEN
                V_VALUE := NULL;
                IF LENGTH (P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CATEGORY_CODE) = 2
                THEN
                    V_VALUE := P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CATEGORY_CODE;
                ELSE
                    SELECT RAWTOHEX (  P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_CATEGORY_CODE)
                      INTO V_VALUE
                      FROM DUAL;
                END IF;
                V_FIELD_055 := V_FIELD_055 || '9F53' || '01' || V_VALUE;
            END IF;
        /*END STAB TEAM 13012022*/

        --START ICPS-709 AM20211125 - ALIGNED FROM MCB V2
           IF (P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_APPLI_IDENTIFIER
                    IS NOT NULL)
            THEN
                V_FIELD_055 :=
                    V_FIELD_055 || '84'
                    || LPAD (
                           PCRD_FUNCTIONS_TOOLS.DEC_TO_HEX (
                               TO_CHAR (
                                   LENGTH (
                                       P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_APPLI_IDENTIFIER)
                                   / 2,
                                   'FM00')),
                           2,
                           '0')
                    || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_APPLI_IDENTIFIER;
            END IF;

        --END ICPS-709 AM20211125 - ALIGNED FROM MCB V2

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_APPLI_VERSION_NUMBER IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F09' || '02' || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_APPLI_VERSION_NUMBER;
        END IF;

        IF ( P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRX_SEQ_COUNTER IS NOT NULL )
        THEN
            V_FIELD_055     :=     V_FIELD_055     || '9F41'
                                || TO_CHAR(LENGTH(P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRX_SEQ_COUNTER)/2,'FM00')
                                || P_TRANSACTION_HIST_AD_CHIP_REC.CHIP_TRX_SEQ_COUNTER;
        END IF;

        V_IPM_OUTGOING_TABLE_REC.ICC_CHIP_DATA_DE055    :=    V_FIELD_055;
    END IF;

    --V_SERVICE_CODE_DE040 := SUBSTR(P_TRANSACTION_HIST_REC.TRACK_INFO, INSTR(P_TRANSACTION_HIST_REC.TRACK_INFO, '=') + 5, 3);
    V_SERVICE_CODE_DE040 := P_TRANSACTION_HIST_REC.SERVICE_CODE;

    IF  SUBSTR(P_TRANSACTION_HIST_REC.TRANSACTION_FEE_RULE, 3, 2)  IN ('33', '34','PA','PI','73','83','PE',   --ENH-IPM-OCTOBRE-2006 IN('33', '34','PA','PI')        --CHIP TRANSACTIONS
                                                                            'PT','PV',--SLA210114
                                                                            'EE', 'TE', 'WE') --SS20201021 REJECTS CORRECTION
    AND  V_SERVICE_CODE_DE040 IS NOT NULL  --ENH-IPM-OCTOBRE-2006
    THEN
        V_IPM_OUTGOING_TABLE_REC.SERVICE_CODE_DE040     :=  P_TRANSACTION_HIST_REC.SERVICE_CODE;

        V_BIT_MAP_STRING                                :=  V_BIT_MAP_STRING || ' 040';     --H.Z010605
    END IF;

    --IF ( P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE IS NOT NULL )
    IF ( TRIM(P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE) IS NOT NULL )
        AND P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE   <>  '000000'
    THEN

--ATH23112012 START
/*
-- START ENH GCMS 8.2
--            V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := ' '||'MCC';
        IF SUBSTR(P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE,6,1) IN ('M','P')
        THEN
           V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := ' '||'MCW';
        ELSE
           V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := ' '||'MCC';
        END IF;
-- END ENH GCMS 8.2
        V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := RTRIM(V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063)||LPAD(TRIM( SUBSTR( P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE , 1 , 6 ) ) , 6 , '0');
*/
        V_NETWORK_DATA:= NULL;
        --TTA20221223 START
        IF P_TRANSACTION_HIST_REC.LINKUP_CODE LIKE 'DCF%'
        THEN
            RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG    (       'P63',
                                                                    P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA,
                                                                    V_TAG_LEN,
                                                                    V_NETWORK_DATA);
                IF  RETURN_STATUS   =  DECLARATION_CST.ERROR
                THEN
                        V_ENV_INFO_TRACE.USER_MESSAGE :=  'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                                          'TAG NAME : ' || 'N00'
                                                          ||'TAG_VALUE: [' || V_NETWORK_DATA || ']'
                                                          || 'MICROFILM_REF_NBR: '|| P_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
                                                          || 'PRIVATE TLV DATA: ['|| P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA ||']'
                                                          ;  --TTA20220621 FOR CHECK
                        PCRD_GENERAL_TOOLS.PUT_TRACES  (    V_ENV_INFO_TRACE,   901 );
                        RETURN RETURN_STATUS;
                END IF;  
        ELSE              
        --TTA20221223 END       
        RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG    (   SUBSTR(PCRD_TAG_PROCESSING.NETWORK_DATA,4,3),
                                                            P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA,
                                                            V_TAG_LEN,
                                                            V_NETWORK_DATA);

        IF  RETURN_STATUS   =  DECLARATION_CST.ERROR
        THEN
                V_ENV_INFO_TRACE.USER_MESSAGE :=  'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                                  'TAG NAME : ' || 'N00'
                                                  ||'TAG_VALUE: [' || V_NETWORK_DATA || ']'
                                                  || 'MICROFILM_REF_NBR: '|| P_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
                                                  || 'PRIVATE TLV DATA: ['|| P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA ||']'
                                                  ;  --TTA20220621 FOR CHECK
                PCRD_GENERAL_TOOLS.PUT_TRACES  (    V_ENV_INFO_TRACE,   901 );
                RETURN RETURN_STATUS;
        END IF;
        END IF; --TTA20221223

        IF V_NETWORK_DATA IS NOT NULL
        THEN
            V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := ' '||SUBSTR(V_NETWORK_DATA,1,9);
        ELSE
            V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := ' '||'MCC';
            V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := RTRIM(V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063)||LPAD(TRIM( SUBSTR( P_TRANSACTION_HIST_REC.AUTHORIZATION_CODE , 1 , 6 ) ) , 6 , '0');
        END IF;
--ATH23112012 END
        /*START IEL&MGR_21122020*/
        IF TRUNC(P_TRANSACTION_HIST_REC.AUTHORIZATION_DATE) <> TRUNC(P_TRANSACTION_HIST_REC.ACQUIRER_SETTLEMENT_DATE)
        THEN
        V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := RTRIM(V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063)||TO_CHAR(NVL(P_TRANSACTION_HIST_REC.ACQUIRER_SETTLEMENT_DATE, P_TRANSACTION_HIST_REC.TRANSACTION_DATE),'MMDD')||'  ';
        ELSE
        V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := RTRIM(V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063)||TO_CHAR(NVL(P_TRANSACTION_HIST_REC.AUTHORIZATION_DATE, P_TRANSACTION_HIST_REC.TRANSACTION_DATE),'MMDD')||'  ';
        END IF;
        --V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 := RTRIM(V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063)||TO_CHAR(NVL(P_TRANSACTION_HIST_REC.AUTHORIZATION_DATE, P_TRANSACTION_HIST_REC.TRANSACTION_DATE),'MMDD')||'  ';
        /*END IEL&MGR_21122020*/
        V_BIT_MAP_STRING := V_BIT_MAP_STRING || ' 063';

    END IF;

/*
    IF P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE IN ('B','F')
    THEN
        V_IPM_OUTGOING_TABLE_REC.MESSAGE_NUMBER_DE071                := P_GLOBAL_INFORMATION.MESSAGE_NUMBER;
    ELSIF P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'S'
    THEN
        IF SUBSTR  ( P_GLOBAL_INFORMATION.CLEARING_CRITERIA, TO_NUMBER (   P_TRANSACTION_HIST_REC.ORIGINE_CODE    )   +   1 , 1   ) = 1
        THEN
            V_IPM_OUTGOING_TABLE_REC.MESSAGE_NUMBER_DE071                := P_GLOBAL_INFORMATION.MESSAGE_NUMBER;
        ELSE
            V_IPM_OUTGOING_TABLE_REC.MESSAGE_NUMBER_DE071                := P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER;
        END IF;
    ELSIF P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'C'
    THEN
        V_IPM_OUTGOING_TABLE_REC.MESSAGE_NUMBER_DE071                := P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER;
    END IF;
*/

    --START HAJAR070307
    IF  V_COLLECTION = TRUE
    THEN
        V_IPM_OUTGOING_TABLE_REC.MESSAGE_NUMBER_DE071                := P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER;
    ELSE
        V_IPM_OUTGOING_TABLE_REC.MESSAGE_NUMBER_DE071                := P_GLOBAL_INFORMATION.MESSAGE_NUMBER;
    END IF;
    --END HAJAR070307

--END MC150506
    V_IPM_OUTGOING_TABLE_REC.DEST_INST_ID_DE093                  := P_TRANSACTION_HIST_REC.ISSUER_ICA;
    V_IPM_OUTGOING_TABLE_REC.ORIG_INST_ID_DE094                  := P_GLOBAL_INFORMATION.MEMBER_ICA;
    --V_IPM_OUTGOING_TABLE_REC.ORIG_INST_ID_DE094                  := P_TRANSACTION_HIST_REC.CLEARING_BIN;--ATH18032013
    V_IPM_OUTGOING_TABLE_REC.RID_CODE_DE100                      := P_TRANSACTION_HIST_REC.ISSUER_ICA;

    V_IPM_PDS_SET(0023).TAG         := '0023';
    V_IPM_PDS_SET(0023).TAG_LENGTH  := 3;
--START MC25052006 (E-COMMERCE)
    IF SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022, 7, 1) IN ('S', 'T')                --- TRANSACTION ECOMMERCE
    THEN
        V_IPM_PDS_SET(0023).TAG_DATA := 'CT6';
--END MC25052006
    ELSIF ( V_CATEG_TERM = 'A' )
    THEN
        V_IPM_PDS_SET(0023).TAG_DATA := 'ATM';
    ELSIF ( V_CATEG_TERM = 'P' )
    THEN
        V_IPM_PDS_SET(0023).TAG_DATA := 'POI';
--MC150506 ENH GCMS 06.1
    --ELSIF ( V_CATEG_TERM = 'M' )
    --ELSIF ( V_CATEG_TERM = 'N' )
    ELSIF SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022, 7, 1) = '1' --ATH15032014
    THEN
        V_IPM_PDS_SET(0023).TAG_DATA := 'MAN';
    ELSE
        V_IPM_PDS_SET(0023).TAG_DATA := 'NA ';
    END IF;
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0023).TAG;

    --OKH 27042022 -------------------------------------
    IF (SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022,7,1) = 'S' AND V_IPM_PDS_SET(0023).TAG_DATA = 'CT6' AND SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022,5,1) IN ('5','1'))
    OR (SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022,7,1) = '7' AND V_IPM_PDS_SET(0023).TAG_DATA = 'CT6' AND SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022,5,1) = '5')
    THEN



--START SLA_30042021_ICPS-562

         --3DS_PROGRAM_PROTOCOL
        RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG ( SUBSTR(PCRD_TAG_PROCESSING.PROGRAM_PROTOCOL_3DS,4,3) ,
                                                        P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA  ,
                                                        V_TAG_LEN,
                                                        V_PROGRAM_PROTOCOL_3DS);
        IF  RETURN_STATUS   =  DECLARATION_CST.ERROR
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE :=  'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG '|| PCRD_TAG_PROCESSING.PROGRAM_PROTOCOL_3DS ;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE, 1000);
        ELSIF RETURN_STATUS = DECLARATION_CST.OK
        THEN
            IF V_PROGRAM_PROTOCOL_3DS IS NOT NULL
            THEN
                V_IPM_PDS_SET(0186).TAG         := '0186';
                V_IPM_PDS_SET(0186).TAG_LENGTH  := 1;
                V_IPM_PDS_SET(0186).TAG_DATA    := V_PROGRAM_PROTOCOL_3DS;
                V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0186).TAG;
            END IF ;
        END IF;
        --3DS_DIRECTORY_TRX_SERVER_ID
        RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG ( SUBSTR(PCRD_TAG_PROCESSING.DIRECTORY_TRX_SERVER_ID_3DS,4,3) ,
                                                    P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA  ,
                                                    V_TAG_LEN,
                                                    V_DIRECTORY_TRX_SERVER_ID_3DS);
        IF V_DIRECTORY_TRX_SERVER_ID_3DS IS NOT NULL
        THEN
            V_IPM_PDS_SET(0184).TAG         := '0184';
            V_IPM_PDS_SET(0184).TAG_LENGTH  := LENGTH(V_DIRECTORY_TRX_SERVER_ID_3DS);
            V_IPM_PDS_SET(0184).TAG_DATA    := V_DIRECTORY_TRX_SERVER_ID_3DS;
            V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0184).TAG;
        END IF;
        --UCAF
        RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG ( SUBSTR(PCRD_TAG_PROCESSING.UCAF,4,3) ,
                                                    P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA  ,
                                                    V_TAG_LEN,
                                                    V_UCAF);
        IF V_UCAF IS NOT NULL
        THEN
            V_IPM_PDS_SET(0185).TAG         := '0185';
            V_IPM_PDS_SET(0185).TAG_LENGTH  := LENGTH(V_UCAF);
            V_IPM_PDS_SET(0185).TAG_DATA    := V_UCAF;
            V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0185).TAG;
        END IF;

    END IF;
--END SLA_30042021_ICPS-562

    ----------------------------------------------------
    IF (P_TRANSACTION_HIST_REC.REVERSAL_FLAG='R')
    THEN
        V_IPM_PDS_SET(0025).TAG         := '0025';
        V_IPM_PDS_SET(0025).TAG_LENGTH  := 7;
        --V_IPM_PDS_SET(0025).TAG_DATA    := 'R'||TO_CHAR(P_TRANSACTION_HIST_REC.TRANSACTION_DATE,'YYMMDD');
        V_IPM_PDS_SET(0025).TAG_DATA    := 'R'||TO_CHAR(V_ORIG_TRANSACTION_HIST_REC.PROCESSING_DATE,'YYMMDD');--ATH19112013
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0025).TAG;
    END IF;

-- START MC25052006  (E-COMMERCE)
/*
    IF SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022,7,1) IN ('S', 'T')                --- TRANSACTION ECOMMERCE
    THEN
        RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG (  PCRD_TAG_PROCESSING.SECURITY_LEVEL_IND ,
                                                        P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA  ,
                                                        V_TAG_LEN,
                                                        V_SECURITY_LEVEL_IND);
        IF RETURN_STATUS = DECLARATION_CST.OK
        THEN
            IF      SUBSTR(V_SECURITY_LEVEL_IND,3,1) <> '0'
            THEN
                V_IPM_PDS_SET(0052).TAG         := '0052';
                V_IPM_PDS_SET(0052).TAG_LENGTH  := 3;
                V_IPM_PDS_SET(0052).TAG_DATA    := SUBSTR(V_SECURITY_LEVEL_IND, 1, 3);
                V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0052).TAG;
            END IF;
        END IF;
    END IF;
    */
--END MC25052006
/*START MJ20071116*/
    --ATH16052014 START
    --IF   SUBSTR(P_TRANSACTION_HIST_REC.POS_DATA,7,1) IN ('S','T')
    --AND  SUBSTR(P_TRANSACTION_HIST_REC.POS_DATA,5,1) IN ('5','1')
    IF SUBSTR(V_IPM_OUTGOING_TABLE_REC.POS_DATA_CODE_DE022,7,1) =   'S'
    --ATH16052014 END
    THEN
         RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG ( SUBSTR(PCRD_TAG_PROCESSING.SECURITY_LEVEL_IND,4,3) ,
                                                        P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA  ,
                                                        V_TAG_LEN,
                                                        V_SECURITY_LEVEL_IND);
         IF RETURN_STATUS != DECLARATION_CST.ERROR
         THEN
                V_IPM_PDS_SET(0052).TAG         := '0052';
                V_IPM_PDS_SET(0052).TAG_LENGTH  := 3;
                V_IPM_PDS_SET(0052).TAG_DATA    := SUBSTR(NVL(V_SECURITY_LEVEL_IND,'000'), 1, 3);
                V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0052).TAG;
         END IF;
    END IF;
/*END   MJ20071116*/

    IF P_TRANSACTION_HIST_REC.TRANSACTION_CODE    = '01' THEN
        V_FEE_PROCESSING_CODE := '29';
    ELSIF P_TRANSACTION_HIST_REC.TRANSACTION_CODE = '03' THEN
        V_FEE_PROCESSING_CODE := '19';
    ELSIF P_TRANSACTION_HIST_REC.TRANSACTION_CODE = '04' THEN
        V_FEE_PROCESSING_CODE := '19';
    ELSIF P_TRANSACTION_HIST_REC.TRANSACTION_CODE = '05' THEN
        V_FEE_PROCESSING_CODE := '29';
    ELSIF P_TRANSACTION_HIST_REC.TRANSACTION_CODE = '09' THEN
        V_FEE_PROCESSING_CODE := '19';
    END IF;

    IF ( P_TRANSACTION_HIST_REC.REVERSAL_FLAG = 'R' )
    THEN
        IF ( V_FEE_PROCESSING_CODE = '19' )
        THEN
            V_FEE_PROCESSING_CODE := '29';
        ELSE
            V_FEE_PROCESSING_CODE := '19';
        END IF;
    END IF;

    V_IPM_PDS_SET(0146).TAG         := '0146';
    V_IPM_PDS_SET(0146).TAG_LENGTH  := 36;--ENH-IPM-OCTOBRE-2006
    V_IPM_PDS_SET(0146).TAG_DATA    := '00'
                                      ||V_FEE_PROCESSING_CODE
                                      ||'00'
                                      ||V_FEE_CURRENCY
                                      ||LPAD(NVL(V_INTERCH_FEES,'0'),12,'0') --ENH-IPM-OCTOBRE-2006
                                      ||V_FEE_CURRENCY
                                      ||LPAD(NVL(V_INTERCH_FEES,'0'),12,'0'); --ENH-IPM-OCTOBRE-2006

    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0146).TAG;

    V_IPM_PDS_SET(0148).TAG         := '0148';
    V_IPM_PDS_SET(0148).TAG_DATA    := P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY||P_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP
                                      ||P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY||P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY_EXP;
	IF SUBSTR(V_DCC_FLAG,1,1) = '1' --DCC --HIRA20230531
    THEN
        V_IPM_PDS_SET(0148).TAG_DATA :=
                   P_TRANSACTION_HIST_REC.AUTHORIZATION_CURRENCY
                || P_TRANSACTION_HIST_REC.AUTHORIZATION_CURRENCY_EXP
                || P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY
                || P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY_EXP;
				
		/*V_ENV_INFO_TRACE.USER_MESSAGE := 'DCC2 TRACE AUTH_CCY:' || P_TRANSACTION_HIST_REC.AUTHORIZATION_CURRENCY 
									|| ' CCY_EXP:' || P_TRANSACTION_HIST_REC.AUTHORIZATION_CURRENCY_EXP 
									|| ' SETL_CCY:' || P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY
										 ' S_CCY_EXP : ' || P_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY_EXP;
		PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);*/				
    END IF;	  

    V_IPM_PDS_SET(0148).TAG_LENGTH  := LENGTH(RTRIM(V_IPM_PDS_SET(0148).TAG_DATA));
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0148).TAG;

    V_IPM_PDS_SET(0158).TAG         := '0158';
--    V_IPM_PDS_SET(0158).TAG_DATA    := RPAD( ' ',10,' ')||SUBSTR(P_TRANSACTION_HIST_REC.PRIVATE_DATA_1,1,2); -- LB 14/09/04
    --V_IPM_PDS_SET(0158).TAG_DATA    := RPAD( ' ',10,' ')||SUBSTR(P_TRANSACTION_HIST_REC.TRANSACTION_FEE_RULE, 3, 2);
    V_IPM_PDS_SET(0158).TAG_DATA    := RPAD( ' ',10,' ')||SUBSTR(RTRIM(P_TRANSACTION_HIST_REC.TRANSACTION_FEE_RULE),- 2);--YL18052008
    V_IPM_PDS_SET(0158).TAG_LENGTH  := 12;
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0158).TAG;

--START SLA210114
    RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG    (   SUBSTR(PCRD_TAG_PROCESSING.WALLET_IDENTIFIER,4,3),
                                                        P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA,
                                                        V_TAG_LEN,
                                                        V_WALLET_PROGRAM_DATA );
    IF RETURN_STATUS = DECLARATION_CST.ERROR
    THEN
            V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                             'TAG NAME : ' || PCRD_TAG_PROCESSING.WALLET_IDENTIFIER;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN RETURN_STATUS;
    ELSIF RETURN_STATUS = DECLARATION_CST.OK
    THEN
        V_IPM_PDS_SET(0207).TAG         := '0207';
        V_IPM_PDS_SET(0207).TAG_LENGTH  := 3;
        V_IPM_PDS_SET(0207).TAG_DATA    := SUBSTR(V_WALLET_PROGRAM_DATA,1,3);
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0207).TAG;
    END IF;
--END SLA210114
--HSA15022021 START
     RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG    (  -- SUBSTR(PCRD_TAG_PROCESSING.MER_ADDITIONAL_DATA,4,3),    --IKR_02032022_AN4224
                                                        PCRD_TAG_PROCESSING.MER_ORIGIN_COUNTRY,--HSA18012022      --IKR_02032022_AN4224
                                                        P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA,
                                                        V_TAG_LEN,
                                                        -- V_MER_ADDITIONAL_DATA );  -- HSA18012022   --IKR_02032022_AN4224
                                                        V_MER_ORIGIN_COUNTRY); --HSA18012022    --IKR_02032022_AN4224
    IF RETURN_STATUS = DECLARATION_CST.ERROR
    THEN
            V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                             'TAG NAME : ' || PCRD_TAG_PROCESSING.MER_ADDITIONAL_DATA;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN RETURN_STATUS;
    ELSIF RETURN_STATUS = DECLARATION_CST.OK
    THEN
        -- IKR_02032022_AN4224
        /*
        RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG    (   SUBSTR(PCRD_TAG_PROCESSING.MER_ORIGIN_COUNTRY_SUB_TAG,7,3),
                                                             TO_CHAR(LENGTH(V_MER_ADDITIONAL_DATA),'FM0000')
                                                            ||V_MER_ADDITIONAL_DATA ,
                                                            V_TAG_LEN,
                                                            V_MER_ORIGIN_COUNTRY );
        IF RETURN_STATUS = DECLARATION_CST.ERROR
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                             'TAG NAME : ' || PCRD_TAG_PROCESSING.MER_ORIGIN_COUNTRY_SUB_TAG;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN RETURN_STATUS;
        ELSIF RETURN_STATUS = DECLARATION_CST.OK
        THEN
        --IKR_02032022_AN4224 END
        */
            V_IPM_PDS_SET(0213).TAG         := '0213';
            V_IPM_PDS_SET(0213).TAG_LENGTH  := 3;
            V_IPM_PDS_SET(0213).TAG_DATA    := SUBSTR(V_MER_ORIGIN_COUNTRY,1,3);
            V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0213).TAG;
        /*END IF;*/
        -- IKR_02032022_AN4224
    END IF;
    --HSA15022021 END


--21Q4_4747 START

    RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG    (       PCRD_TAG_PROCESSING.RESUBMISSION_CODE,
                                                            P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA,
                                                            V_TAG_LEN,
                                                            V_RESUBMISSION_CODE );
    IF RETURN_STATUS = DECLARATION_CST.ERROR
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                                 'TAG NAME : ' || PCRD_TAG_PROCESSING.RESUBMISSION_CODE;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN RETURN_STATUS;
    ELSIF RETURN_STATUS = DECLARATION_CST.OK
    THEN
        IF V_RESUBMISSION_CODE IS NOT NULL
        THEN
            V_IPM_PDS_SET(0444).TAG         := '0444';
            V_IPM_PDS_SET(0444).TAG_LENGTH  := 11;
            V_IPM_PDS_SET(0444).TAG_DATA    := V_RESUBMISSION_CODE;
            V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0444).TAG;
        END IF ;
    END IF;

    --21Q4_4747 END

    --ATH19102012 START
    IF VAT_RESULT <> 0
    THEN
        V_IPM_PDS_SET(0596).TAG         := '0596';
        V_IPM_PDS_SET(0596).TAG_LENGTH  := 21;
        V_IPM_PDS_SET(0596).TAG_DATA    := LPAD(NVL(SUBSTR(P_MERCHANT_REC.VAT_NUMBER,1,20),0),20,'0')||'Y';
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0596).TAG;
    END IF;
    --ATH19102012 END
    V_IPM_PDS_SET(0165).TAG         := '0165';
--MC150506
    --IF SUBSTR  ( P_GLOBAL_INFORMATION.CLEARING_CRITERIA, TO_NUMBER (   P_TRANSACTION_HIST_REC.ORIGINE_CODE    )   +   1 , 1   ) = 1
    IF  V_COLLECTION = TRUE --HAJAR070307
    THEN
    V_IPM_PDS_SET(0165).TAG_DATA    := 'C';
    ELSE
    V_IPM_PDS_SET(0165).TAG_DATA    := 'M';
    END IF;
--MC150506
    V_IPM_PDS_SET(0165).TAG_LENGTH  := 1;
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0165).TAG;
--START KEL20230119
    RETURN_STATUS := PCRD_TAG_PROCESSING.GET_SUB_TAG (  SUBSTR(PCRD_TAG_PROCESSING.ACC_CUS_SERV_PHONE_NUMBER,4,6),
                                                        TO_CHAR(LENGTH(P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO),'FM0000')
                                                        ||P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO,
                                                        V_TAG_LEN,
                                                        V_ACC_CUS_SERV_PHONE_NUMBER);
    IF  RETURN_STATUS  =  DECLARATION_CST.ERROR
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_SUB_TAG ' ||
                                         'TAG NAME : ' || SUBSTR(PCRD_TAG_PROCESSING.ACC_CUS_SERV_PHONE_NUMBER,4,6);
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    END IF;
    RETURN_STATUS := PCRD_TAG_PROCESSING.GET_SUB_TAG ( SUBSTR( PCRD_TAG_PROCESSING.ACC_PHONE_NUMBER,4,6),
                                                        TO_CHAR(LENGTH(P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO),'FM0000')
                                                        ||P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO,
                                                        V_TAG_LEN,
                                                        V_ACC_PHONE_NUMBER);
    IF  RETURN_STATUS  =  DECLARATION_CST.ERROR
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_SUB_TAG ' ||
                                         'TAG NAME : ' || SUBSTR(PCRD_TAG_PROCESSING.ACC_PHONE_NUMBER,4,6);
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    END IF;
    RETURN_STATUS := PCRD_TAG_PROCESSING.GET_SUB_TAG (  SUBSTR(PCRD_TAG_PROCESSING.ACC_ADD_CONTACT_INFO,4,6),
                                                        TO_CHAR(LENGTH(P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO),'FM0000')
                                                        ||P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO,
                                                        V_TAG_LEN,
                                                        V_ACC_ADD_CONTACT_INFO);
    IF  RETURN_STATUS  =  DECLARATION_CST.ERROR
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_SUB_TAG ' ||
                                         'TAG NAME : ' || SUBSTR(PCRD_TAG_PROCESSING.ACC_ADD_CONTACT_INFO,4,6);
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    END IF;
    V_IPM_PDS_SET(0170).TAG         := '0170';
    V_IPM_PDS_SET(0170).TAG_DATA    := RPAD(NVL(V_ACC_CUS_SERV_PHONE_NUMBER,' '),16)
                                       ||RPAD(NVL(V_ACC_PHONE_NUMBER,' '),16,' ')
                                       ||SUBSTR(V_ACC_ADD_CONTACT_INFO,1,25);
    IF( RTRIM(V_IPM_PDS_SET(0170).TAG_DATA) IS NOT NULL )
    THEN
        V_IPM_PDS_SET(0170).TAG_LENGTH  := LENGTH(RTRIM(V_IPM_PDS_SET(0170).TAG_DATA));
        V_IPM_PDS_SET(0170).TAG_DATA    := RTRIM(V_IPM_PDS_SET(0170).TAG_DATA);
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0170).TAG;
    END IF;
   RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG (  SUBSTR(PCRD_TAG_PROCESSING.MER_ADDITIONAL_DATA,4,3) ,
                                                    TO_CHAR(LENGTH(P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO),'FM0000')
                                                    ||P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO,
                                                    V_TAG_LEN,
                                                    V_MER_ADDITIONAL_DATA );
    IF RETURN_STATUS = DECLARATION_CST.ERROR
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                            'TAG NAME : ' || PCRD_TAG_PROCESSING.MER_ADDITIONAL_DATA;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    ELSIF RETURN_STATUS = DECLARATION_CST.OK
    THEN
        RETURN_STATUS := PCRD_TAG_PROCESSING.GET_SUB_TAG (  SUBSTR(PCRD_TAG_PROCESSING.ACC_URL_ADDRESS,4,6),
                                                            TO_CHAR(LENGTH(P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO),'FM0000')
                                                            ||P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO,
                                                            V_TAG_LEN,
                                                            V_ACC_URL_ADDRESS);
        IF  RETURN_STATUS  =  DECLARATION_CST.ERROR
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_SUB_TAG ' ||
                                             'TAG NAME : ' || SUBSTR(PCRD_TAG_PROCESSING.ACC_URL_ADDRESS,4,6);
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        ELSIF RETURN_STATUS = DECLARATION_CST.OK
        THEN
            IF TRIM(V_ACC_URL_ADDRESS) IS NOT NULL
            THEN
                V_IPM_PDS_SET(0175).TAG         := '0175';
                V_IPM_PDS_SET(0175).TAG_LENGTH  := LENGTH(RTRIM(V_ACC_URL_ADDRESS));
                V_IPM_PDS_SET(0175).TAG_DATA    := SUBSTR(V_ACC_URL_ADDRESS,1,255);
                V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0175).TAG;
            END IF ;
        END IF;
    END IF;
    RETURN_STATUS := PCRD_TAG_PROCESSING.GET_TAG (  SUBSTR(PCRD_TAG_PROCESSING.SERVICE_LOCATION,4,3) ,
                                                    TO_CHAR(LENGTH(P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO),'FM0000')
                                                    ||P_TRANSACTION_HIST_REC.PRIVATE_TLV_DATA_AUTHO,
                                                    V_TAG_LEN,
                                                    V_SERVICE_LOCATION );
    IF RETURN_STATUS = DECLARATION_CST.ERROR
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_TAG_PROCESSING.GET_TAG ' ||
                                            'TAG NAME : ' || SUBSTR(PCRD_TAG_PROCESSING.SERVICE_LOCATION,4,3);
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    ELSIF RETURN_STATUS = DECLARATION_CST.OK
    THEN
        IF(V_SERVICE_LOCATION IS NOT NULL)
        THEN
            V_IPM_PDS_SET(0216).TAG         := '0216';
            V_IPM_PDS_SET(0216).TAG_DATA    := RPAD(SUBSTR(NVL(V_SERVICE_LOCATION,' '),30,12),13)--SUBFIELD 1 (SERVICE LOCATION CITY NAME) ALIMENTED WITH DE48.P70 (POSITION 30-41)
                                                ||RPAD(SUBSTR(NVL(V_SERVICE_LOCATION,' '),17,3),3)--SUBFIELD 2 (SERVICE LOCATION COUNTRY SUBDIVISION CODE) ALIMENTED WITH DE48.P70 (POSITION 17-19)
                                                ||RPAD(SUBSTR(NVL(V_SERVICE_LOCATION,' '),14,3),3)--SUBFIELD 3 (SERVICE LOCATION COUNTRY CODE) ALIMENTED WITH DE48.P70 (POSITION 14-16)
                                                ||RPAD(SUBSTR(NVL(V_SERVICE_LOCATION,' '),20,10),10);--SUBFIELD 4 (SERVICE LOCATION POSTAL CODE) ALIMENTED WITH DE48.P70 (POSITION 20-29)
            IF( RTRIM(V_IPM_PDS_SET(0216).TAG_DATA) IS NOT NULL )
            THEN
                V_IPM_PDS_SET(0216).TAG_LENGTH  := LENGTH(RTRIM(V_IPM_PDS_SET(0216).TAG_DATA));
                V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0216).TAG;
            END IF;
        END IF;
    END IF;
--END KEL20230119
    RETURN_STATUS := PCRD_IPM_TOOLS_3.PDS_SET_ASSEMBLER  (  V_IPM_PDS_SET,
                                                            V_PDS_ITEMS  ,
                                                            V_IPM_OUTGOING_TABLE_REC.ADDITIONAL_DATA_DE048);
    IF (RETURN_STATUS <> DECLARATION_CST.OK)
    THEN
        RETURN(RETURN_STATUS);
    END IF;

    IF  P_TRANSACTION_HIST_AD_CHIP_REC.MICROFILM_REF_NUMBER IS NOT NULL
    THEN
        V_BIT_MAP_STRING := RTRIM(V_BIT_MAP_STRING) || ' 002 003 004 005 012 022 024 025 026 031 032 033 042 043 048 049 050 055 071 094 ';--MC20050809
        --V_BIT_MAP_STRING := RTRIM(V_BIT_MAP_STRING) || ' 002 003 004 005 012 022 024 025 026 031 032 033 042 043 048 049 050 055 071 094 100 ';--ATH22032013 --ATH22042013
    ELSE
        V_BIT_MAP_STRING := RTRIM(V_BIT_MAP_STRING) || ' 002 003 004 005 012 022 024 025 026 031 032 033 042 043 048 049 050 071 094 ';--MC20050809
        --V_BIT_MAP_STRING := RTRIM(V_BIT_MAP_STRING) || ' 002 003 004 005 012 022 024 025 026 031 032 033 042 043 048 049 050 071 094 100 ';--ATH22032013  --ATH22042013
    END IF;

    RETURN_STATUS := PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP ( V_BIT_MAP_STRING                         ,
                                                       V_IPM_OUTGOING_TABLE_REC.BIT_MAP_1_DE000 ,
                                                       V_IPM_OUTGOING_TABLE_REC.BIT_MAP_2_DE001 );
    IF  RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR IN PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN  DECLARATION_CST.ERROR;
    END IF;

--MC150506
    IF  V_COLLECTION = TRUE --HAJAR070307
    /*IF (P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'C')
      OR ( P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'S'
      AND SUBSTR  ( P_GLOBAL_INFORMATION.CLEARING_CRITERIA, TO_NUMBER (   P_TRANSACTION_HIST_REC.ORIGINE_CODE    )   +   1 , 1   ) = 0) --RDH060306*/
    THEN
        V_IPM_OUTGOING_TABLE_REC.FILE_NAME_DE101 := P_GLOBAL_INFORMATION.COL_FILE_NAME;

        RETURN_STATUS := PCRD_IPM_INSERT.INSERT_IPM_OUTGOING_COLLECTION ( V_IPM_OUTGOING_TABLE_REC );
        IF ( RETURN_STATUS <> DECLARATION_CST.OK )
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR IN PCRD_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN( DECLARATION_CST.ERROR );
        END IF;
    ELSE
        V_IPM_OUTGOING_TABLE_REC.FILE_NAME_DE101 := P_GLOBAL_INFORMATION.FILE_NAME;

        RETURN_STATUS := PCRD_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE ( V_IPM_OUTGOING_TABLE_REC );
        IF ( RETURN_STATUS <> DECLARATION_CST.OK )
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR IN PCRD_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN( DECLARATION_CST.ERROR );
        END IF;
    END IF;
--MC150506

    V_IPM_OUTG_TABLE_AD_TRIP_REC    :=  V_IPM_OUTGOING_TABLE_REC;--ATH25042012

    --IF SUBSTR( V_IPM_OUTGOING_TABLE_REC.ACQUIRING_REFER_DATA_DE031,1,2) = '67'
       --AND SUBSTR( V_IPM_OUTGOING_TABLE_REC.TRANSACTION_LIF_CYC_ID_DE063 , 2,3) IN ('MCP','MCF')
/* START MOU_21022022 "COMMENT THE CODE BELOW TO AVOID TOTAL REJECTION. TO CHECK THE MESSAGE NUMBER IN CASE OF ADDENDUM RECORDS" */
  /*  IF P_TRANSACTION_HIST_REC.PRIVATE_DATA_1 IN ( '67','62','63','65')--ENH-GCMS-7.2 AJOUT DES IRI 63, 65 -- LB 14/09/04
    AND V_COLLECTION = FALSE --HAJAR070307
       -- AND SUBSTR  ( P_GLOBAL_INFORMATION.CLEARING_CRITERIA, TO_NUMBER (   P_TRANSACTION_HIST_REC.ORIGINE_CODE    )   +   1 , 1   ) = 1  --MC150506
    THEN
        RETURN_STATUS := GENERATE_IPM_ADDEN_CORPORATE(  P_GLOBAL_INFORMATION    ,
                                                        V_IPM_OUTGOING_TABLE_REC );
        IF ( RETURN_STATUS <> DECLARATION_CST.OK )
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_IPM_ADDEN_CORPORATE';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN( DECLARATION_CST.ERROR );
        END IF;
    END IF;*/
    /* END MOU_21022022 */
    --ATH25042012 START
    IF  SUBSTR(P_TRANSACTION_HIST_REC.PRIVATE_DATA_1, 1, 1) <> 'E'
        AND   P_TRANSACTION_HIST_REC.ADDENDUM_INDICATOR   =   TRANS_GLOBAL_VARS.AL_AIRLINE_ADDENDUM
        AND V_COLLECTION = FALSE
    THEN
        IF  P_TRANSACTION_HIST_REC.REVERSAL_FLAG =   GLOBAL_VARS.REVERSAL
        THEN
            V_MICROFILM_REF_SEQ     :=  '1';
        ELSE
            V_MICROFILM_REF_SEQ     :=  P_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;
        END IF;

        RETURN_STATUS   :=    PCRD_GET_TRANS_ADDENDUM_ROWS.GET_RECORD_AL    (   P_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER ,
                                                                                V_MICROFILM_REF_SEQ                         ,
                                                                                V_TRANSACTION_HIST_AL_REC                   );
        IF   RETURN_STATUS   <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=    'ERROR RETURNED BY PCRD_GET_TRANS_ADDENDUM_ROWS.GET_RECORD_AL'       ||
                                                  ' MICROFILM :'   ||  P_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER  ||
                                                  ' SEQUENCE  :'   ||  P_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;
            PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
            RETURN  RETURN_STATUS;
        END IF;
        RETURN_STATUS := PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_IPM_ADDEN_GEN_TICKET    (   P_TRANSACTION_HIST_REC         ,
                                                                                            P_GLOBAL_INFORMATION           ,
                                                                                            V_TRANSACTION_HIST_AL_REC      ,
                                                                                            V_IPM_OUTG_TABLE_AD_TRIP_REC   );
        IF  RETURN_STATUS <> DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR RETURNED BY PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_IPM_ADDEN_GEN_TICKET';
            PCRD_GENERAL_TOOLS.PUT_TRACES   (   V_ENV_INFO_TRACE,  200 );
            RETURN  RETURN_STATUS;
        END IF;

        RETURN_STATUS := PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_IPM_ADDEN_TRIP_DATA (   P_TRANSACTION_HIST_REC         ,
                                                                                        P_GLOBAL_INFORMATION           ,
                                                                                        V_TRANSACTION_HIST_AL_REC      ,
                                                                                        V_IPM_OUTG_TABLE_AD_TRIP_REC   );
        IF  RETURN_STATUS <> DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=    'ERROR WHEN CALLING PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_IPM_ADDEN_TRIP_DATA';
            PCRD_GENERAL_TOOLS.PUT_TRACES   (   V_ENV_INFO_TRACE, 300 );
            RETURN  DECLARATION_CST.ERROR;
        END IF;
    END IF;
    --ATH25042012 END
/*
--START MC150506
    IF P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE IN ('B','F')
    THEN
        P_GLOBAL_INFORMATION.MESSAGE_NUMBER                := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;
    ELSIF P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'S'
    THEN
        IF SUBSTR  ( P_GLOBAL_INFORMATION.CLEARING_CRITERIA, TO_NUMBER (   P_TRANSACTION_HIST_REC.ORIGINE_CODE    )   +   1 , 1   ) = 1
        THEN
            P_GLOBAL_INFORMATION.MESSAGE_NUMBER                := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;
        ELSE
            P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER            := P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER + 1;
        END IF;
    ELSIF P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE = 'C'
    THEN
        P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER                := P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER + 1;
    END IF;
--END MC150506
*/
    --START HAJAR070307
    IF V_COLLECTION = TRUE
    THEN
        P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER                := P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER + 1;
    ELSE
        P_GLOBAL_INFORMATION.MESSAGE_NUMBER                := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;
    END IF;
    --END HAJAR070307

    RETURN(DECLARATION_CST.OK);

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE   :=  NULL;
    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    RETURN  DECLARATION_CST.ERROR;
END GENERATE_IPM_1240;
-------------------------------------------------------------------------------------------------------------------------------
PROCEDURE   PROC_GENERATE_IPM_FINANCIAL           ( P_BUSINESS_DATE                 IN              DATE,
                                                    P_TASK_NAME                     IN              VARCHAR2,
                                                    P_PROCEDURE_NAME                IN              VARCHAR2,
                                                    P_PARALLEL_JOB_NUMBER           IN              PLS_INTEGER)
                                                    IS PRAGMA AUTONOMOUS_TRANSACTION;

V_PCARD_TASKS_JOBS_RECORD           PCARD_TASKS_JOBS%ROWTYPE;
V_VALUE_OF_RETURN_STATUS            PCARD_TASKS_JOBS.STATUS_CODE%TYPE   :=  'S';
V_ENV_INFO_TRACE                    GLOBAL_VARS.ENV_INFO_TRACE_TYPE;
RETURN_STATUS                       PLS_INTEGER;
BEGIN
    V_ENV_INFO_TRACE.BUSINESS_DATE  :=  P_BUSINESS_DATE;
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  GLOBAL_VARS.ML_CREDIT_REVOLVING;
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  $$PLSQL_UNIT;
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'PROC_GENERATE_IPM_FINANCIAL';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;

    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.SET_TO_START_JOB (    P_TASK_NAME,
                                                                    P_PROCEDURE_NAME,
                                                                    P_PARALLEL_JOB_NUMBER,
                                                                    V_PCARD_TASKS_JOBS_RECORD);
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_NEW_TASKS_JOBS_TOOLS.SET_TO_START_JOB '
                                            || 'TASK_NAME : '||P_TASK_NAME
                                            || 'P_PROCEDURE_NAME : '||P_PROCEDURE_NAME
                                            || 'P_PARALLEL_JOB_NUMBER : '||P_PARALLEL_JOB_NUMBER;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN;
    END IF;

    PCRD_ERRORS.TASK_ID    := SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_4,9);   -- MBH20022012
    PCRD_ERRORS.TASK_NAME  := P_TASK_NAME;                             -- MBH20022012
    PCRD_ERRORS.JOB_NUMBER := P_PARALLEL_JOB_NUMBER;                   -- MBH20022012
    --START MBH07032012
    IF(V_PCARD_TASKS_JOBS_RECORD.P_NUMBER_1 = 1)
    THEN
        PCRD_ERRORS.NO_CRASH_BATCH := TRUE;
    ELSE
        PCRD_ERRORS.NO_CRASH_BATCH := FALSE;
    END IF;
    --END MBH07032012

    RETURN_STATUS   :=  PCRD_IPM_OUTGOING_FINANC_1240.FUNC_GENERATE_IPM_FINANCIAL    (  P_BUSINESS_DATE,
                                                                                        P_TASK_NAME,
                                                                                        P_PROCEDURE_NAME,
                                                                                        P_PARALLEL_JOB_NUMBER,
                                                                                        V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_1,
                                                                                        V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_2,
                                                                                        SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_4,1,2),
                                                                                        SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_4,3,6),
                                                                                        --SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_3,2,1),
                                                                                        SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_3,2),--ATH22042013 (ANOMALIE 36950)
                                                                                        V_PCARD_TASKS_JOBS_RECORD.P_DATE_1,--ATH28082012
                                                                                        SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_3,1,1));
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
            ROLLBACK;
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR RETURNED BY PCRD_IPM_OUTGOING_FINANC_1240.FUNC_GENERATE_IPM_FINANCIAL';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            V_VALUE_OF_RETURN_STATUS        :=  'U';
    END IF;

    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.SET_TO_END_JOB (  P_TASK_NAME,
                                                                P_PROCEDURE_NAME,
                                                                P_PARALLEL_JOB_NUMBER,
                                                                V_VALUE_OF_RETURN_STATUS,
                                                                V_ENV_INFO_TRACE.USER_MESSAGE);
    COMMIT;

    RETURN;
    EXCEPTION WHEN OTHERS
    THEN
                V_ENV_INFO_TRACE.USER_MESSAGE :=  NULL;
                PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                ROLLBACK;
                RETURN;

END PROC_GENERATE_IPM_FINANCIAL;
--------------------------------------------------------------
-----START CDU20171023


PROCEDURE   PROC_GENERATE_IPM_COLLECTION          ( P_BUSINESS_DATE                 IN              DATE,
                                                    P_TASK_NAME                     IN              VARCHAR2,
                                                    P_PROCEDURE_NAME                IN              VARCHAR2,
                                                    P_PARALLEL_JOB_NUMBER           IN              PLS_INTEGER)
                                                    IS PRAGMA AUTONOMOUS_TRANSACTION;

V_PCARD_TASKS_JOBS_RECORD           PCARD_TASKS_JOBS%ROWTYPE;
V_VALUE_OF_RETURN_STATUS            PCARD_TASKS_JOBS.STATUS_CODE%TYPE   :=  'S';
V_ENV_INFO_TRACE                    GLOBAL_VARS.ENV_INFO_TRACE_TYPE;
RETURN_STATUS                       PLS_INTEGER;
BEGIN
    V_ENV_INFO_TRACE.BUSINESS_DATE  :=  P_BUSINESS_DATE;
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  GLOBAL_VARS.ML_CREDIT_REVOLVING;
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  $$PLSQL_UNIT;
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'PROC_GENERATE_IPM_COLLECTION';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;

    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.SET_TO_START_JOB (    P_TASK_NAME,
                                                                    P_PROCEDURE_NAME,
                                                                    P_PARALLEL_JOB_NUMBER,
                                                                    V_PCARD_TASKS_JOBS_RECORD);
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_NEW_TASKS_JOBS_TOOLS.SET_TO_START_JOB '
                                            || 'TASK_NAME : '||P_TASK_NAME
                                            || 'P_PROCEDURE_NAME : '||P_PROCEDURE_NAME
                                            || 'P_PARALLEL_JOB_NUMBER : '||P_PARALLEL_JOB_NUMBER;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN;
    END IF;

    PCRD_ERRORS.TASK_ID    := SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_4,16);
    PCRD_ERRORS.TASK_NAME  := P_TASK_NAME;
    PCRD_ERRORS.JOB_NUMBER := P_PARALLEL_JOB_NUMBER;







    IF(V_PCARD_TASKS_JOBS_RECORD.P_NUMBER_1 = 1)
    THEN
        PCRD_ERRORS.NO_CRASH_BATCH := TRUE;
    ELSE
        PCRD_ERRORS.NO_CRASH_BATCH := FALSE;
    END IF;




    RETURN_STATUS   :=  PCRD_IPM_OUTGOING_FINANC_1240.FUNC_GENERATE_IPM_COLLECTION    (  P_BUSINESS_DATE,
                                                                                        P_TASK_NAME,
                                                                                        P_PROCEDURE_NAME,
                                                                                        P_PARALLEL_JOB_NUMBER,
                                                                                        SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_1, 8, 8),
                                                                                        V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_2,
                                                                                        V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_4,
                                                                                        SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_1,1,6),
                                                                                        V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_3,
                                                                                        V_PCARD_TASKS_JOBS_RECORD.P_DATE_1,
                                                                                        SUBSTR(V_PCARD_TASKS_JOBS_RECORD.P_VARCHAR_1,7,1));
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
            ROLLBACK;
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR RETURNED BY PCRD_IPM_OUTGOING_FINANC_1240.FUNC_GENERATE_IPM_COLLECTION';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            V_VALUE_OF_RETURN_STATUS        :=  'U';
    END IF;

    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.SET_TO_END_JOB (  P_TASK_NAME,
                                                                P_PROCEDURE_NAME,
                                                                P_PARALLEL_JOB_NUMBER,
                                                                V_VALUE_OF_RETURN_STATUS,
                                                                V_ENV_INFO_TRACE.USER_MESSAGE);
    COMMIT;

    RETURN;
    EXCEPTION WHEN OTHERS
    THEN
                V_ENV_INFO_TRACE.USER_MESSAGE :=  NULL;
                PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                ROLLBACK;
                RETURN;

END PROC_GENERATE_IPM_COLLECTION;
------END CDU20171023
-------------------------------------------------------------------------------------------------------------------------
FUNCTION    FUNC_GENERATE_IPM_FINANCIAL   ( P_BUSINESS_DATE                 IN              DATE,
                                            P_TASK_NAME                     IN              VARCHAR2,
                                            P_PROCEDURE_NAME                IN              VARCHAR2,
                                            P_PARALLEL_JOB_NUMBER           IN              PLS_INTEGER,
                                            P_CUTOFF_ID                     IN              CUTOFF_FOLLOW_UP.CUTOFF_SEQUENCE%TYPE,
                                            P_CLEARING_ICA                  IN              CLEARING_PARTNER.CLEARING_ICA%TYPE,
                                            P_NETWORK_CODE                  IN              CLEARING_PARTNER.NETWORK_CODE%TYPE,-- MBH20022012
                                            --P_CLEARING_BIN                  IN              CLEARING_PARTNER.CLEARING_BIN%TYPE,-- MBH17022012
                                            P_PRINCIPAL_MEMBER              IN              CLEARING_PARTNER.BANK_CODE%TYPE, --ATH18032013(BANK PROCESSEUR)
                                            P_CONTEXT_REG                   IN              VARCHAR, -- MBH20022012
                                            P_FILE_PROCESSING_DATE          IN              DATE,--ATH28082012
                                            P_SEPERATE_COLLECTION_FILE      IN              CHAR)
                                            RETURN PLS_INTEGER  IS

RETURN_STATUS                           PLS_INTEGER;
V_ENV_INFO_TRACE                        GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;
V_TRANSACTION_HIST_AD_CHIP_REC          TRANSACTION_HIST_ADD_CHIP%ROWTYPE;  --H.Z190505
V_PARAM1                                PLS_INTEGER;--MC150506
V_PARAM2                                PLS_INTEGER;--MC150506
/*DEBUT MJ BENCH IBM*/
V_CUR_CLEARING_PARTNER_REC              CLEARING_PARTNER%ROWTYPE;
P_GLOBAL_INFORMATION                    PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION;

V_ARG_START                         VARCHAR2(128);
V_ARG_END                           VARCHAR2(128);
V_NB_REC_PROCESSED                  PLS_INTEGER := 0;
V_START_DATE                        DATE := SYSDATE;
V_COMMIT                            NUMBER:=0;
/*FIN MJ BENCH IBM*/

--START MBH07032012
V_ENV_INFO_OPERATION                PCRD_CAI_ERRORS.ENV_INFO_OPERATION_TYPE;
P_GLOBAL_INFORMATION_OLD            PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION;
V_AMOUNT                            NUMBER:=0;
V_COUNTER_1                         NUMBER:=0;
V_COUNTER_2                         NUMBER:=0;
V_COUNTER_3                         NUMBER:=0;
V_AMOUNT_1                          NUMBER:=0;
V_AMOUNT_2                          NUMBER:=0;
V_AMOUNT_3                          NUMBER:=0;
--END MBH07032012
V_SYSTEM_DATE                       DATE := TO_DATE(TO_CHAR(SYSDATE,'DDMMYYYY HH24:MI:SS'),'DDMMYYYY HH24:MI:SS');  --FSE22062012
CURSOR      CUR_TRANSACTION_HIST /*(P_PARAM1              PLS_INTEGER,-- ----RDH070306
                                  P_PARAM2              PLS_INTEGER)*/IS--

        SELECT          TRANSACTION_HIST_MVT.*
        FROM            TRANSACTION_HIST_MVT                --MJ BENCH IBM
--        WHERE           OUTLET_NUMBER           BETWEEN TO_NUMBER(V_ARG_START, '999999999999999999.999') AND TO_NUMBER(V_ARG_END, '999999999999999999.999')
        WHERE           OUTLET_NUMBER           BETWEEN V_ARG_START AND V_ARG_END --ATH01062012
--                AND     NETWORK_CODE            =  NVL(P_NETWORK_CODE,GLOBAL_VARS.NETWORK_MASTERCARD)   --MBH23022012
                AND     CLEARING_NETWORK            =  NVL(P_NETWORK_CODE,GLOBAL_VARS.NETWORK_MASTERCARD)   --ATH24052012
                AND     CLEARING_BIN            =   P_CLEARING_ICA              -- MBH20022012
                AND     CLEARING_FORMAT         =   GLOBAL_VARS.FILE_FORMAT_IPM -- MBH20022012
                AND     SETTLEMENT_CUTOFF_OUTG  =   'X'
                AND     INSTR  (P_CONTEXT_REG  ,REGULATION_CONTEXTE_TYPE)  <> 0 -- MBH20022012
                --AND     NETWORK_CODE            =   GLOBAL_VARS.NETWORK_MASTERCARD --YB090403
                --AND     ACQUIRER_ICA            =   P_GLOBAL_INFORMATION.MEMBER_ICA
                --AND     ORIGINE_CODE            IN ('3','4')
               -- AND     SUBSTR  ( P_GLOBAL_INFORMATION.CLEARING_CRITERIA, TO_NUMBER (   ORIGINE_CODE    )   +   1 , 1   )  IN (P_PARAM1,P_PARAM2)
               --AND     ORIGINE_CODE     IN (GLOBAL_VARS.ORIGIN_CODE_C_ONUS_M_LOCAL,
               --                            GLOBAL_VARS.ORIGIN_CODE_C_NATIONAL_M_ONUS, GLOBAL_VARS.ORIGIN_CODE_C_FOREIGN_M_ONUS)
                AND     LINKUP_CODE NOT LIKE 'IPM%'
                AND     FUNCTION_CODE           =   '205'
                AND     NVL(ROUTING_CODE,'X') NOT LIKE '22%'    --AES_0247162_07122020
                AND DATE_CREATE > SYSDATE - 15                  --MOU 17112021 STAB
        ORDER BY
                        OUTLET_NUMBER,--ATH10082012
                        REVERSAL_FLAG,
                        RECEIVING_MEMBER_ID,
                        PROCESSING_CLASS,
                        RECONCILIATION_CURRENCY;

--ATH10082012 START
V_NB_PROCESSED_OUTLET               NUMBER(6);
V_LAST_OUTLET_NUMBER                TRANSACTION_HIST.OUTLET_NUMBER%TYPE;
--ATH10082012 END
V_MERCHANT_REC                      MERCHANT%ROWTYPE;--ATH19102012
V_DATA_FILE_TYPE_2                  PCRD_MCI_REPORTING_TOOLS_V3.DATA_FILE_TYPE; --MBH13102015
BEGIN

    -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  GLOBAL_VARS.ML_IPM;
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  $$PLSQL_UNIT;
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'GENERATE_IPM_FINANCIAL';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------


    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.GET_INTERVAL_BUCKET_BY_JOB   (    P_TASK_NAME,
                                                                                    P_PROCEDURE_NAME,
                                                                                    P_PARALLEL_JOB_NUMBER,
                                                                                    V_ARG_START,
                                                                                    V_ARG_END);
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE :=  'ERROR OCCURED DURING CALL PCRD_NEW_TASKS_JOBS_TOOLS.GET_INTERVAL_BUCKET_BY_JOB';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN (RETURN_STATUS);
    END IF;

/*DEBUT MJ BENCH IBM*/
    BEGIN
        SELECT  *
        INTO    V_CUR_CLEARING_PARTNER_REC
        FROM    CLEARING_PARTNER
        WHERE   NETWORK_CODE    =  NVL(P_NETWORK_CODE,GLOBAL_VARS.NETWORK_MASTERCARD)   --MBH23022012
            --AND CLEARING_ICA    =   P_CLEARING_ICA;
            AND BANK_CODE       =   P_PRINCIPAL_MEMBER;--ATH18032013
    --START MBH26082011
    EXCEPTION   WHEN OTHERS
    THEN
            V_ENV_INFO_TRACE.ERROR_CODE     := 'PWC-00021';
            V_ENV_INFO_TRACE.PARAM1         := 'CLEARING_PARTNER';
            V_ENV_INFO_TRACE.PARAM2         :=  'NETWORK_CODE = ' || NVL(P_NETWORK_CODE,GLOBAL_VARS.NETWORK_MASTERCARD)
                                                --|| 'CLEARING_ICA = ' ||   P_CLEARING_ICA;
                                                || ' BANK_CODE = ' ||   P_PRINCIPAL_MEMBER;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN(DECLARATION_CST.ERROR);
    END;
    --END MBH26082011

    P_GLOBAL_INFORMATION.MESSAGE_NUMBER             :=  P_PARALLEL_JOB_NUMBER;
    P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE   :=  P_SEPERATE_COLLECTION_FILE;--ATH22032013
    P_GLOBAL_INFORMATION.PROCESSING_DATE            :=  P_BUSINESS_DATE;--ATH22032013
    RETURN_STATUS := PCRD_IPM_OUTGOING_MAIN.IPM_INITIALIZATION( P_GLOBAL_INFORMATION,
                                                                V_CUR_CLEARING_PARTNER_REC,
                                                                P_CLEARING_ICA --ATH22032013
                                                               );

    IF ( RETURN_STATUS <> DECLARATION_CST.OK )
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_OUTGOING_MAIN.IPM_INITIALIZATION';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN( DECLARATION_CST.ERROR );
    END IF;
/*FIN MJ BENCH IBM*/

--MC150506
    IF P_SEPERATE_COLLECTION_FILE = 'C'
    THEN
        V_PARAM1 := 0;
        V_PARAM2 := 0;
    ELSIF P_SEPERATE_COLLECTION_FILE = 'F'
    THEN
        V_PARAM1 := 1;
        V_PARAM2 := 1;
    ELSIF P_SEPERATE_COLLECTION_FILE IN ('B','S')
    THEN
        V_PARAM1 := 0;
        V_PARAM2 := 1;
    END IF;
                    V_ENV_INFO_TRACE.USER_MESSAGE := 'TRX :'  ||' '||
                                                     'V_PARAM1 =' || V_PARAM1       ||' '||
                                                     'V_PARAM2 =' || V_PARAM2;
                    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
--MC150506

--START ATH19102012
    BEGIN
         SELECT COUNT(*) INTO VAT_RESULT
         FROM   VAT_COUNTRY
         WHERE  COUNTRY_ALPHA_CODE = ( SELECT COUNTRY_ALPHA_CODE
         FROM   MCI_MPE_ICA WHERE ICA = P_GLOBAL_INFORMATION.MEMBER_ICA );

    EXCEPTION WHEN NO_DATA_FOUND
    THEN
        VAT_RESULT := 0;
    WHEN OTHERS
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED IN VAT PARAMS: ACQUIRER_ICA '  ||' '||
                                          P_GLOBAL_INFORMATION.MEMBER_ICA;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN_STATUS := DECLARATION_CST.ERROR;
    END;
--END ATH19102012

--ATH10082012 START
    V_NB_PROCESSED_OUTLET               :=  0.;
    V_LAST_OUTLET_NUMBER                :=  'X';

    RETURN_STATUS   :=  PCRD_CRE_OUTGOING_TOOLS.INIT_CRE_FILE_OUTGOING_ARRAY(P_BUSINESS_DATE);
    IF  RETURN_STATUS   <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := ':ERROR RETURNED BY PCRD_CRE_OUTGOING_TOOLS.INIT_CRE_FILE_OUTGOING_ARRAY. '
                                         || ' P_BUSINESS_DATE:  '    || P_BUSINESS_DATE;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN (RETURN_STATUS);
    END IF;
--ATH10082012 END

    FOR V_CUR_TRANSACTION_HIST_REC IN CUR_TRANSACTION_HIST/*( V_PARAM1,
                                                            V_PARAM2)*/
    LOOP
        RETURN_STATUS := PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO( P_GLOBAL_INFORMATION,
                                                                                  P_GLOBAL_INFORMATION_OLD);
        IF ( RETURN_STATUS <> DECLARATION_CST.OK )
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN( DECLARATION_CST.ERROR );
        END IF;

        SAVEPOINT B;
        V_ENV_INFO_OPERATION  := NULL;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_1 := V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_2 := V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_3 := V_CUR_TRANSACTION_HIST_REC.LINKUP_CODE  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_4 := V_CUR_TRANSACTION_HIST_REC.BATCH_NUMBER  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_5 := V_CUR_TRANSACTION_HIST_REC.REMITTANCE_SEQUENCE  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_6 := V_CUR_TRANSACTION_HIST_REC.VOUCHER_SEQUENCE  ;
        V_ENV_INFO_OPERATION.OPERATION_TYPE     := 'TRANSACTION_HIST_MVT';
        V_ENV_INFO_OPERATION.TRANSACTION_AMOUNT := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_AMOUNT;
        --END MBH07032012

        V_NB_REC_PROCESSED      :=  V_NB_REC_PROCESSED + 1;

       --START MBH19032012
       V_AMOUNT   := NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0)
                     * POWER(10,NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY_EXP,0));
       V_COUNTER_1 :=  V_COUNTER_1 + 1;
       V_AMOUNT_1  :=  V_AMOUNT_1  + NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0);
       --END MBH19032012

--DEBUT MODIF H.Z190505
        V_TRANSACTION_HIST_AD_CHIP_REC  :=  NULL;

        IF  V_CUR_TRANSACTION_HIST_REC.ADDENDUM_CHIP_DATA = GLOBAL_VARS.YES
        AND V_CUR_TRANSACTION_HIST_REC.REVERSAL_FLAG <>  GLOBAL_VARS.REVERSAL --YL20022007
        THEN
            RETURN_STATUS   :=  PCRD_GET_DATA_TRANSACT_ROWS.GET_TRANSACTION_HIST_ADD_CHIP  (   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER,
                                                                                               V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ,
                                                                                               V_TRANSACTION_HIST_AD_CHIP_REC);
            IF RETURN_STATUS <> DECLARATION_CST.OK
            THEN
                    V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_GET_DATA_TRANSACT_ROWS.GET_TRANSACTION_HIST_ADD_CHIP'  ||' '||
                                                     'MICROFILM REF NBR =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER       ||' '||
                                                     'MICROFILM REF SEQ =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;
                    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                    --START MBH07032012
                    --RETURN (RETURN_STATUS);
                    GOTO ROLLBACK_AND_CONTINUE;
                    --END MBH07032012
            END IF;
        END IF;
        --ATH19102012 START
        RETURN_STATUS := PCRD_GET_DATA_MERCHANT_ROWS.GET_MERCHANT       (V_CUR_TRANSACTION_HIST_REC.MERCHANT_NUMBER,
                                                                         V_MERCHANT_REC,
                                                                         TRUE);
        IF RETURN_STATUS <> DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR RETURNED BY PCRD_GET_DATA_MERCHANT_ROWS.GET_MERCHANT. '
                                            ||  'MERCHANT NUMBER : '    || V_CUR_TRANSACTION_HIST_REC.MERCHANT_NUMBER;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            GOTO ROLLBACK_AND_CONTINUE;
        END IF;

        --ATH19102012 END
        RETURN_STATUS := GENERATE_IPM_1240 (    P_GLOBAL_INFORMATION            ,
                                                V_CUR_TRANSACTION_HIST_REC      ,
                                                V_TRANSACTION_HIST_AD_CHIP_REC  , --H.Z190505
                                                V_MERCHANT_REC          --ATH19102012
                                                  );
        IF  RETURN_STATUS <> DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=   'ERROR CALLING PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_IPM_1240'            ||' '||
                                                 'MICROFILM REF NBR =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER   ||' '||
                                                 'MICROFILM REF SEQ =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            --START MBH07032012
            --RETURN (RETURN_STATUS);
            GOTO ROLLBACK_AND_CONTINUE;
            --END MBH07032012
        END IF;


/*DEBUT MJ BENCH IBM */
--DEFECT_357  START
        BEGIN

            UPDATE  TRANSACTION_HIST_MVT
            SET     SETTLEMENT_FLAG_OUTG    =   GLOBAL_VARS.ALREADY_PROCESSED,
--                    SETTLEMENT_CUTOFF_OUTG  =   P_GLOBAL_INFORMATION.CUTOFF_SEQUENCE,--ATH16092011
                    SETTLEMENT_CUTOFF_OUTG  =                             P_CUTOFF_ID, --ATH16092011
--START MOU20120123
--NZE05042011 ANO 314 PROD
                    --INTERCHANGE_FILE_NUMBER =   'IPM'||TO_CHAR( SYSDATE , 'YYDDD' )||TRIM(P_GLOBAL_INFORMATION.MEMBER_ICA),
                    INTERCHANGE_FILE_NUMBER =   'IPM'
                            ||  TO_CHAR( P_GLOBAL_INFORMATION.PROCESSING_DATE , 'YYMMDD' )
                            ||  LPAD(P_GLOBAL_INFORMATION.MEMBER_ICA,11,'0')
                            ||  TO_CHAR(P_GLOBAL_INFORMATION.FILE_SEQUENCE,'FM00000'),
--NZE05042011 ANO 314 PROD
--END MOU20120123
                    CLEARING_DATE           =   P_BUSINESS_DATE,--ATH28052012
                    CLEARING_STAN           =   TO_CHAR(P_GLOBAL_INFORMATION.MESSAGE_NUMBER-1, 'FM000000'),
                    CLEARING_DATE_PROC          =   V_SYSTEM_DATE--FS22062012
            WHERE   MICROFILM_REF_NUMBER    =   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
            AND     MICROFILM_REF_SEQ       =   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;

        EXCEPTION
        WHEN OTHERS THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR UPDATING TRANSACTION_HIST_MVT FOR MICROFILM'
                                                ||  V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
                                                ||  ' AND SEQUENCE ' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ
                                                ||' ERROR :';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            --START MBH07032012
            --RETURN (DECLARATION_CST.ERROR);
            GOTO ROLLBACK_AND_CONTINUE;
            --END MBH07032012
        END;

--TTA20220803 START
        BEGIN

            UPDATE  TRANSACTION_HIST
            SET     SETTLEMENT_FLAG_OUTG    =   GLOBAL_VARS.ALREADY_PROCESSED,
                    SETTLEMENT_CUTOFF_OUTG  =                             P_CUTOFF_ID,
                    INTERCHANGE_FILE_NUMBER =   'IPM'
                            ||  TO_CHAR( P_GLOBAL_INFORMATION.PROCESSING_DATE , 'YYMMDD' )
                            ||  LPAD(P_GLOBAL_INFORMATION.MEMBER_ICA,11,'0')
                            ||  TO_CHAR(P_GLOBAL_INFORMATION.FILE_SEQUENCE,'FM00000'),
                    CLEARING_DATE           =   P_BUSINESS_DATE,--ATH28052012
                    CLEARING_STAN           =   TO_CHAR(P_GLOBAL_INFORMATION.MESSAGE_NUMBER-1, 'FM000000'),
                    CLEARING_DATE_PROC          =   V_SYSTEM_DATE--FS22062012
            WHERE   MICROFILM_REF_NUMBER    =   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
            AND     MICROFILM_REF_SEQ       =   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;

        EXCEPTION
        WHEN OTHERS THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR UPDATING TRANSACTION_HIST FOR MICROFILM'
                                                ||  V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
                                                ||  ' AND SEQUENCE ' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ
                                                ||' ERROR :';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            GOTO ROLLBACK_AND_CONTINUE;
        END;
--TTA20220803 END
--ATH10082012 START
        IF V_LAST_OUTLET_NUMBER <> V_CUR_TRANSACTION_HIST_REC.OUTLET_NUMBER
        THEN
            IF  V_NB_PROCESSED_OUTLET   =   1000
            THEN
                RETURN_STATUS   :=  PCRD_CRE_OUTGOING_TOOLS.SAVE_CRE_FILE_OUTGOING_ARRAY(P_BUSINESS_DATE);
                IF  RETURN_STATUS   <> DECLARATION_CST.OK
                THEN
                    V_ENV_INFO_TRACE.USER_MESSAGE := ':ERROR RETURNED BY PCRD_CRE_OUTGOING_TOOLS.SAVE_CRE_FILE_OUTGOING_ARRAY. '
                                                     || ' P_BUSINESS_DATE  '    || P_BUSINESS_DATE;
                    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                    GOTO ROLLBACK_AND_CONTINUE;
                END IF;
                V_NB_PROCESSED_OUTLET           :=  0.;
            END IF;
            V_NB_PROCESSED_OUTLET               :=  V_NB_PROCESSED_OUTLET   +   1;
            V_LAST_OUTLET_NUMBER                :=  V_CUR_TRANSACTION_HIST_REC.OUTLET_NUMBER;
        END IF;
        RETURN_STATUS   :=  PCRD_CRE_OUTGOING_TOOLS.PROCCESS_TRANSACTION(   P_BUSINESS_DATE,
                                                                            P_BUSINESS_DATE,
                                                                            P_FILE_PROCESSING_DATE,--ATH28082012
                                                                            TO_CHAR(P_GLOBAL_INFORMATION.FILE_SEQUENCE,'FM00000'),
                                                                            V_CUR_TRANSACTION_HIST_REC);
        IF  RETURN_STATUS   <> DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE := ':ERROR RETURNED BY PCRD_CRE_OUTGOING_TOOLS.PROCCESS_TRANSACTION: '
                                             || ' MICROFILM_REF_NUMBER  '    || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
                                             || ' MICROFILM_REF_SEQ  '       || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            GOTO ROLLBACK_AND_CONTINUE;
        END IF;
--ATH10082012 END
--DEFECT_357  END
/* */
        --START MBH13102015
        V_DATA_FILE_TYPE_2.FILE_ID                       := P_GLOBAL_INFORMATION.FILE_SEQUENCE;
        V_DATA_FILE_TYPE_2.PROCESSING_DATE               := P_FILE_PROCESSING_DATE;
        V_DATA_FILE_TYPE_2.BUSINESS_DATE                 := P_BUSINESS_DATE;
        V_DATA_FILE_TYPE_2.CUTOFF_SEQUENCE               := P_CUTOFF_ID;
        V_DATA_FILE_TYPE_2.CLEARING_BIN                  := V_CUR_TRANSACTION_HIST_REC.CLEARING_BIN;
        V_DATA_FILE_TYPE_2.ISSUER_BANK_CODE              := V_CUR_TRANSACTION_HIST_REC.ACQUIRER_BANK_CODE;
        V_DATA_FILE_TYPE_2.CARD_NUMBER                   := V_CUR_TRANSACTION_HIST_REC.CARD_NUMBER;
        V_DATA_FILE_TYPE_2.TRANSACTION_DATE              := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_DATE;
        V_DATA_FILE_TYPE_2.SETTLEMENT_AMOUNT             := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_AMOUNT;
        V_DATA_FILE_TYPE_2.SETTLEMENT_CURRENCY_CODE      := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY;
        V_DATA_FILE_TYPE_2.TRANSACTION_CURRENCY_EXP      := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_CURRENCY_EXP;
        V_DATA_FILE_TYPE_2.TRANSACTION_SIGN              := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_SIGN;
        V_DATA_FILE_TYPE_2.MICROFILM_REF_NUMBER          := V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER;
        V_DATA_FILE_TYPE_2.MICROFILM_REF_SEQ             := V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;
        V_DATA_FILE_TYPE_2.REVERSAL_FLAG                 := V_CUR_TRANSACTION_HIST_REC.REVERSAL_FLAG;
        V_DATA_FILE_TYPE_2.SETTLEMENT_FLAG               := V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_FLAG;
        V_DATA_FILE_TYPE_2.AUTHORIZATION_CODE            := V_CUR_TRANSACTION_HIST_REC.AUTHORIZATION_CODE;
        V_DATA_FILE_TYPE_2.TRANSACTION_CODE              := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_CODE;
        V_DATA_FILE_TYPE_2.INTERCHANGE_FEES              := V_CUR_TRANSACTION_HIST_REC.INTERCHANGE_FEES;
        V_DATA_FILE_TYPE_2.INTERCHANGE_FEES_CURRENCY     := V_CUR_TRANSACTION_HIST_REC.INTERCHANGE_FEES_CURRENCY;
        V_DATA_FILE_TYPE_2.INTERCHANGE_FEES_CURRENCY_EXP := V_CUR_TRANSACTION_HIST_REC.INTERCHANGE_FEES_CURRENCY_EXP;
        V_DATA_FILE_TYPE_2.INTERCHANGE_FEES_SIGN         := V_CUR_TRANSACTION_HIST_REC.INTERCHANGE_FEES_SIGN;
        V_DATA_FILE_TYPE_2.TRANSACTION_FEE_RULE          := TRIM(V_CUR_TRANSACTION_HIST_REC.TRANSACTION_FEE_RULE);
        V_DATA_FILE_TYPE_2.FUNCTION_CODE                 := V_CUR_TRANSACTION_HIST_REC.FUNCTION_CODE;
        RETURN_STATUS   := PCRD_MCI_REPORTING_TOOLS_V3.GEN_STG_MCI_OUT_FINANCIAL ( V_DATA_FILE_TYPE_2);

        IF RETURN_STATUS    <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'PCRD_MCI_REPORTING_TOOLS_V3.GEN_STG_MCI_OUT_FINANCIAL ';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
             GOTO ROLLBACK_AND_CONTINUE;
        END IF;
        --END MBH13102015
        --START MBH19032012
        V_COUNTER_2 :=  V_COUNTER_2 + 1;
        V_AMOUNT_2  :=  V_AMOUNT_2  + NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0);
        --END MBH19032012

        --START MBH07032012
        COMMIT;
        CONTINUE;
        << ROLLBACK_AND_CONTINUE >>
        BEGIN
            IF (PCRD_ERRORS.NO_CRASH_BATCH)
            THEN

                ROLLBACK TO B;
                RETURN_STATUS  :=PCRD_CAI_ERRORS.INSERT_RECORD_ERRORS(V_ENV_INFO_OPERATION);
                IF RETURN_STATUS <> DECLARATION_CST.OK
                THEN
                        V_ENV_INFO_TRACE.USER_MESSAGE := ':ERROR RETURNED BY PCRD_CAI_ERRORS.INSERT_RECORD_ERRORS';
                        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                        RETURN (RETURN_STATUS);
                END IF;

                RETURN_STATUS := PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO( P_GLOBAL_INFORMATION_OLD,
                                                                          P_GLOBAL_INFORMATION);
                IF ( RETURN_STATUS <> DECLARATION_CST.OK )
                THEN
                    V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO';
                    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                    RETURN( DECLARATION_CST.ERROR );
                END IF;

                --START MBH19032012
                V_COUNTER_3 :=  V_COUNTER_3 + 1;
                V_AMOUNT_3  :=  V_AMOUNT_3  + NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0);
                --END MBH19032012
                CONTINUE;
            END IF;
            RETURN (RETURN_STATUS);
        END;
        --END MBH07032012
    END LOOP;

--ATH10082012 START
    IF PCRD_CRE_OUTGOING_TOOLS.RT_CRE_FILE_OUTGOING.COUNT > 0
    THEN
        RETURN_STATUS   :=  PCRD_CRE_OUTGOING_TOOLS.SAVE_CRE_FILE_OUTGOING_ARRAY(P_BUSINESS_DATE);
        IF  RETURN_STATUS   <> DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE := ':ERROR RETURNED BY PCRD_CRE_OUTGOING_TOOLS.SAVE_CRE_FILE_OUTGOING_ARRAY. '
                                             || ' P_BUSINESS_DATE:  '    || P_BUSINESS_DATE;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN (RETURN_STATUS);
        END IF;
    END IF;
--ATH10082012 END

    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.OUTSIDE_AFTER_MAIN_LOOP   (   P_TASK_NAME,
                                                                                P_PROCEDURE_NAME,
                                                                                P_PARALLEL_JOB_NUMBER,
                                                                                TRUE,
                                                                                V_NB_REC_PROCESSED,
                                                                                V_START_DATE);
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
            V_ENV_INFO_TRACE.USER_MESSAGE :=  'ERROR RETURNED BY PCRD_NEW_TASKS_JOBS_TOOLS.OUTSIDE_AFTER_MAIN_LOOP';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN (DECLARATION_CST.ERROR);
    END IF;

    --START MBH22052012
    RETURN_STATUS   :=  PCRD_CAI_ERRORS.UPD_TASK_COUNTER(V_COUNTER_1,
                                                     V_COUNTER_2,
                                                     V_COUNTER_3,
                                                     0,
                                                     0,
                                                     V_AMOUNT_1,
                                                     V_AMOUNT_2,
                                                     V_AMOUNT_3,
                                                     0,
                                                     0,
                                                     TRUE );
    IF RETURN_STATUS   <>  DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR CALLING PCRD_CAI_ERRORS.UPD_TASK_COUNTER';
        PCRD_GENERAL_TOOLS.PUT_TRACES  (    V_ENV_INFO_TRACE,   $$PLSQL_LINE );
        RETURN( RETURN_STATUS );
    END IF;
    --END MBH22052012

    RETURN(DECLARATION_CST.OK);

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE       :=  NULL;
    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    RETURN( DECLARATION_CST.ERROR );
END FUNC_GENERATE_IPM_FINANCIAL;

-----------------------------------------------------------------------------------------------------------------------------------------------------
----START CDU20171023
FUNCTION    FUNC_GENERATE_IPM_COLLECTION  ( P_BUSINESS_DATE                 IN              DATE,
                                            P_TASK_NAME                     IN              VARCHAR2,
                                            P_PROCEDURE_NAME                IN              VARCHAR2,
                                            P_PARALLEL_JOB_NUMBER           IN              PLS_INTEGER,
                                            P_CUTOFF_ID                     IN              CUTOFF_FOLLOW_UP.CUTOFF_SEQUENCE%TYPE,
                                            P_CLEARING_ICA                  IN              CLEARING_PARTNER.CLEARING_ICA%TYPE,
                                            P_NETWORK_CODE                  IN              VARCHAR2,
                                            P_PRINCIPAL_MEMBER              IN              CLEARING_PARTNER.BANK_CODE%TYPE,
                                            P_CONTEXT_REG                   IN              VARCHAR,
                                            P_FILE_PROCESSING_DATE          IN              DATE,
                                            P_SEPERATE_COLLECTION_FILE      IN              CHAR)
                                            RETURN PLS_INTEGER  IS

RETURN_STATUS                           PLS_INTEGER;
V_ENV_INFO_TRACE                        GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;
V_TRANSACTION_HIST_AD_CHIP_REC          TRANSACTION_HIST_ADD_CHIP%ROWTYPE;
V_PARAM1                                PLS_INTEGER;
V_PARAM2                                PLS_INTEGER;
V_CUR_CLEARING_PARTNER_REC              CLEARING_PARTNER%ROWTYPE;
P_GLOBAL_INFORMATION                    PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION;

V_ARG_START                         VARCHAR2(128);
V_ARG_END                           VARCHAR2(128);
V_NB_REC_PROCESSED                  PLS_INTEGER := 0;
V_START_DATE                        DATE := SYSDATE;
V_COMMIT                            NUMBER:=0;







V_ENV_INFO_OPERATION                PCRD_CAI_ERRORS.ENV_INFO_OPERATION_TYPE;
P_GLOBAL_INFORMATION_OLD            PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION;
V_AMOUNT                            NUMBER:=0;
V_COUNTER_1                         NUMBER:=0;
V_COUNTER_2                         NUMBER:=0;
V_COUNTER_3                         NUMBER:=0;
V_AMOUNT_1                          NUMBER:=0;
V_AMOUNT_2                          NUMBER:=0;
V_AMOUNT_3                          NUMBER:=0;

V_SYSTEM_DATE                       DATE := TO_DATE(TO_CHAR(SYSDATE,'DDMMYYYY HH24:MI:SS'),'DDMMYYYY HH24:MI:SS');
CURSOR      CUR_TRANSACTION_HIST
                                 IS





        SELECT          TRANSACTION_HIST_MVT.*
        FROM            TRANSACTION_HIST_MVT
        WHERE           OUTLET_NUMBER           BETWEEN V_ARG_START AND V_ARG_END
                --AND     INSTR(P_NETWORK_CODE, CLEARING_NETWORK) <> 0  --DL29122022 -ADDED NVL BELOW AS CLEARING NETWORK IS NULL FOR WITHDRAWALS
                AND     INSTR(P_NETWORK_CODE, NVL(CLEARING_NETWORK,GLOBAL_VARS.NETWORK_MASTERCARD)) <> 0
                AND     CLEARING_BIN            =   P_CLEARING_ICA
                AND     SUBSTR(SETTLEMENT_CUTOFF_OUTG, 1, 1)  <>   'C'
                AND     ORIGINE_CODE = '0'
                --AND     INSTR  (P_CONTEXT_REG  ,REGULATION_CONTEXTE_TYPE)  <> 0
                --AND NVL(ROUTING_CODE, 'XXXXX') <>  TRANS_GLOBAL_VARS.ROUTING_CODE_MDS --CDU20171023
                AND     ROUTING_CODE NOT LIKE '22%'
                AND     LINKUP_CODE NOT LIKE 'IPM%'
                AND     CARD_NUMBER <> '5416389999999992'   --TTA20221104
                AND     PROCESSING_CODE NOT LIKE '21%'          --TTA20221104
                --AND     TRANSACTION_CODE <> 'ET'          --TTA20221123
                AND     TRANSACTION_CODE IN ('01','03','05','09','04') --TTA20230104
                AND     FUNCTION_CODE           =   '205'
        ORDER BY
                        OUTLET_NUMBER,
                        REVERSAL_FLAG,
                        RECEIVING_MEMBER_ID,
                        PROCESSING_CLASS,
                        RECONCILIATION_CURRENCY;



V_NB_PROCESSED_OUTLET               NUMBER(6);
V_LAST_OUTLET_NUMBER                TRANSACTION_HIST.OUTLET_NUMBER%TYPE;
V_MERCHANT_REC                      MERCHANT%ROWTYPE;

BEGIN

    -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  GLOBAL_VARS.ML_IPM;
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  $$PLSQL_UNIT;
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'GENERATE_IPM_COLLECTION';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------


    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.GET_INTERVAL_BUCKET_BY_JOB   (    P_TASK_NAME,
                                                                                    P_PROCEDURE_NAME,
                                                                                    P_PARALLEL_JOB_NUMBER,
                                                                                    V_ARG_START,
                                                                                    V_ARG_END);
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE :=  'ERROR OCCURED DURING CALL PCRD_NEW_TASKS_JOBS_TOOLS.GET_INTERVAL_BUCKET_BY_JOB';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN (RETURN_STATUS);
    END IF;


    BEGIN
        SELECT  *
        INTO    V_CUR_CLEARING_PARTNER_REC
        FROM    CLEARING_PARTNER
        WHERE INSTR(P_NETWORK_CODE, NETWORK_CODE) > 0
            AND BANK_CODE       =   P_PRINCIPAL_MEMBER
            ----AND CLEARING_ICA = P_CLEARING_ICA
            AND CLEARING_BIN = P_CLEARING_ICA; --CDU20171023
            ---AND ROWNUM = 1;

    EXCEPTION   WHEN OTHERS
    THEN
            V_ENV_INFO_TRACE.ERROR_CODE     := 'PWC-00021';
            V_ENV_INFO_TRACE.PARAM1         := 'CLEARING_PARTNER';
            V_ENV_INFO_TRACE.PARAM2         :=  'NETWORK_CODE = ' || NVL(P_NETWORK_CODE,GLOBAL_VARS.NETWORK_MASTERCARD)
                                                || ' BANK_CODE = ' ||   P_PRINCIPAL_MEMBER;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN(DECLARATION_CST.ERROR);
    END;


    P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER             :=  P_PARALLEL_JOB_NUMBER;
    P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE   :=  P_SEPERATE_COLLECTION_FILE;--ATH22032013
    P_GLOBAL_INFORMATION.PROCESSING_DATE            :=  P_BUSINESS_DATE;--ATH22032013
    RETURN_STATUS := PCRD_IPM_OUTGOING_MAIN.IPM_INITIALIZATION( P_GLOBAL_INFORMATION,
                                                                V_CUR_CLEARING_PARTNER_REC,
                                                                P_CLEARING_ICA --ATH22032013
                                                               );

    IF ( RETURN_STATUS <> DECLARATION_CST.OK )
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_OUTGOING_MAIN.IPM_INITIALIZATION';
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN( DECLARATION_CST.ERROR );
    END IF;



    BEGIN
         SELECT COUNT(*) INTO VAT_RESULT
         FROM   VAT_COUNTRY
         WHERE  COUNTRY_ALPHA_CODE = ( SELECT COUNTRY_ALPHA_CODE
         FROM   MCI_MPE_ICA WHERE ICA = P_GLOBAL_INFORMATION.MEMBER_ICA );

    EXCEPTION WHEN NO_DATA_FOUND
    THEN
        VAT_RESULT := 0;
    WHEN OTHERS
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED IN VAT PARAMS: ACQUIRER_ICA '  ||' '||
                                          P_GLOBAL_INFORMATION.MEMBER_ICA;
        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
        RETURN_STATUS := DECLARATION_CST.ERROR;
    END;

    V_NB_PROCESSED_OUTLET               :=  0.;
    V_LAST_OUTLET_NUMBER                :=  'X';


    FOR V_CUR_TRANSACTION_HIST_REC IN CUR_TRANSACTION_HIST

    LOOP
        RETURN_STATUS := PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO( P_GLOBAL_INFORMATION,
                                                                                  P_GLOBAL_INFORMATION_OLD);
        IF ( RETURN_STATUS <> DECLARATION_CST.OK )
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN( DECLARATION_CST.ERROR );
        END IF;

        SAVEPOINT B;
        V_ENV_INFO_OPERATION  := NULL;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_1 := V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_2 := V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_3 := V_CUR_TRANSACTION_HIST_REC.LINKUP_CODE  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_4 := V_CUR_TRANSACTION_HIST_REC.BATCH_NUMBER  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_5 := V_CUR_TRANSACTION_HIST_REC.REMITTANCE_SEQUENCE  ;
        V_ENV_INFO_OPERATION.PRIMARY_KEY_6 := V_CUR_TRANSACTION_HIST_REC.VOUCHER_SEQUENCE  ;
        V_ENV_INFO_OPERATION.OPERATION_TYPE     := 'TRANSACTION_HIST_MVT';
        V_ENV_INFO_OPERATION.TRANSACTION_AMOUNT := V_CUR_TRANSACTION_HIST_REC.TRANSACTION_AMOUNT;


        V_NB_REC_PROCESSED      :=  V_NB_REC_PROCESSED + 1;


       V_AMOUNT   := NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0)
                     * POWER(10,NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_CURRENCY_EXP,0));
       V_COUNTER_1 :=  V_COUNTER_1 + 1;
       V_AMOUNT_1  :=  V_AMOUNT_1  + NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0);



        V_TRANSACTION_HIST_AD_CHIP_REC  :=  NULL;

        IF  V_CUR_TRANSACTION_HIST_REC.ADDENDUM_CHIP_DATA = GLOBAL_VARS.YES
        AND V_CUR_TRANSACTION_HIST_REC.REVERSAL_FLAG <>  GLOBAL_VARS.REVERSAL
        THEN
            RETURN_STATUS   :=  PCRD_GET_DATA_TRANSACT_ROWS.GET_TRANSACTION_HIST_ADD_CHIP  (   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER,
                                                                                               V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ,
                                                                                               V_TRANSACTION_HIST_AD_CHIP_REC);
            IF RETURN_STATUS <> DECLARATION_CST.OK
            THEN
                    V_ENV_INFO_TRACE.USER_MESSAGE := 'ERROR RETURNED BY PCRD_GET_DATA_TRANSACT_ROWS.GET_TRANSACTION_HIST_ADD_CHIP'  ||' '||
                                                     'MICROFILM REF NBR =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER       ||' '||
                                                     'MICROFILM REF SEQ =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;


                    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);

                    GOTO ROLLBACK_AND_CONTINUE;


            END IF;


        END IF;

        RETURN_STATUS := PCRD_GET_DATA_MERCHANT_ROWS.GET_MERCHANT       (V_CUR_TRANSACTION_HIST_REC.MERCHANT_NUMBER,
                                                                         V_MERCHANT_REC,
                                                                         TRUE);
        IF RETURN_STATUS <> DECLARATION_CST.OK

        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR RETURNED BY PCRD_GET_DATA_MERCHANT_ROWS.GET_MERCHANT. '
                                            ||  'MERCHANT NUMBER : '    || V_CUR_TRANSACTION_HIST_REC.MERCHANT_NUMBER;

            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            GOTO ROLLBACK_AND_CONTINUE;
        END IF;


        RETURN_STATUS := GENERATE_IPM_1240 (    P_GLOBAL_INFORMATION            ,
                                                V_CUR_TRANSACTION_HIST_REC      ,
                                                V_TRANSACTION_HIST_AD_CHIP_REC  ,
                                                V_MERCHANT_REC
                                                  );
        IF  RETURN_STATUS <> DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=   'ERROR CALLING PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_IPM_1240'            ||' '||
                                                 'MICROFILM REF NBR =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER   ||' '||
                                                 'MICROFILM REF SEQ =' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);

            GOTO ROLLBACK_AND_CONTINUE;
        END IF;



































        BEGIN

            UPDATE  TRANSACTION_HIST_MVT
            SET        SETTLEMENT_CUTOFF_OUTG  =                            'C' || SUBSTR(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_CUTOFF_OUTG, 2)
            WHERE   MICROFILM_REF_NUMBER    =   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
            AND     MICROFILM_REF_SEQ       =   V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ;

        EXCEPTION
        WHEN OTHERS THEN
            V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR UPDATING TRANSACTION_HIST FOR MICROFILM'
                                                ||  V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_NUMBER
                                                ||  ' AND SEQUENCE ' || V_CUR_TRANSACTION_HIST_REC.MICROFILM_REF_SEQ
                                                ||' ERROR :';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);

            GOTO ROLLBACK_AND_CONTINUE;

        END;


        V_COUNTER_2 :=  V_COUNTER_2 + 1;
        V_AMOUNT_2  :=  V_AMOUNT_2  + NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0);



        COMMIT;
        CONTINUE;
        << ROLLBACK_AND_CONTINUE >>
        BEGIN
            IF (PCRD_ERRORS.NO_CRASH_BATCH)
            THEN

                ROLLBACK TO B;
                RETURN_STATUS  :=PCRD_CAI_ERRORS.INSERT_RECORD_ERRORS(V_ENV_INFO_OPERATION);
                IF RETURN_STATUS <> DECLARATION_CST.OK
                THEN
                        V_ENV_INFO_TRACE.USER_MESSAGE := ':ERROR RETURNED BY PCRD_CAI_ERRORS.INSERT_RECORD_ERRORS';
                        PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                        RETURN (RETURN_STATUS);
                END IF;

                RETURN_STATUS := PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO( P_GLOBAL_INFORMATION_OLD,
                                                                          P_GLOBAL_INFORMATION);
                IF ( RETURN_STATUS <> DECLARATION_CST.OK )
                THEN
                    V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_OUTGOING_FINANC_1240.SAVE_OR_ROLLB_GLOBAL_INFO';
                    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
                    RETURN( DECLARATION_CST.ERROR );
                END IF;


                V_COUNTER_3 :=  V_COUNTER_3 + 1;
                V_AMOUNT_3  :=  V_AMOUNT_3  + NVL(V_CUR_TRANSACTION_HIST_REC.SETTLEMENT_AMOUNT,0);

                CONTINUE;
            END IF;
            RETURN (RETURN_STATUS);
        END;

    END LOOP;
















    RETURN_STATUS   :=  PCRD_NEW_TASKS_JOBS_TOOLS.OUTSIDE_AFTER_MAIN_LOOP   (   P_TASK_NAME,
                                                                                P_PROCEDURE_NAME,
                                                                                P_PARALLEL_JOB_NUMBER,

                                                                                TRUE,
                                                                                V_NB_REC_PROCESSED,
                                                                                V_START_DATE);
    IF RETURN_STATUS <> DECLARATION_CST.OK
    THEN

            V_ENV_INFO_TRACE.USER_MESSAGE :=  'ERROR RETURNED BY PCRD_NEW_TASKS_JOBS_TOOLS.OUTSIDE_AFTER_MAIN_LOOP';
            PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
            RETURN (DECLARATION_CST.ERROR);
    END IF;



    RETURN_STATUS   :=  PCRD_CAI_ERRORS.UPD_TASK_COUNTER(V_COUNTER_1,
                                                     V_COUNTER_2,
                                                     V_COUNTER_3,
                                                     0,
                                                     0,
                                                     V_AMOUNT_1,
                                                     V_AMOUNT_2,
                                                     V_AMOUNT_3,
                                                     0,
                                                     0,
                                                     TRUE );
    IF RETURN_STATUS   <>  DECLARATION_CST.OK
    THEN

        V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR CALLING PCRD_CAI_ERRORS.UPD_TASK_COUNTER';
        PCRD_GENERAL_TOOLS.PUT_TRACES  (    V_ENV_INFO_TRACE,   $$PLSQL_LINE );
        RETURN( RETURN_STATUS );
    END IF;


    RETURN(DECLARATION_CST.OK);

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE       :=  NULL;
    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    RETURN( DECLARATION_CST.ERROR );
END FUNC_GENERATE_IPM_COLLECTION;

----END CDU20171023

-----------------------------------------------------------------------------------------------------------------------------------------------------

FUNCTION    SAVE_OR_ROLLB_GLOBAL_INFO      (   P_GLOBAL_INFORMATION_OLD        IN     PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION,
                                               P_GLOBAL_INFORMATION            OUT    PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION )
                                            RETURN PLS_INTEGER IS

V_ENV_INFO_TRACE                        GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;
RETURN_STATUS                           PLS_INTEGER;
BEGIN
   -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  GLOBAL_VARS.ML_IPM;
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  $$PLSQL_UNIT;
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'SAVE_OR_ROLLB_GLOBAL_INFO';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------

    P_GLOBAL_INFORMATION.BANK_CODE                  := P_GLOBAL_INFORMATION_OLD.BANK_CODE ;
    P_GLOBAL_INFORMATION.MEMBER_ICA                 := P_GLOBAL_INFORMATION_OLD.MEMBER_ICA ;
    P_GLOBAL_INFORMATION.MEMBER_BIN                 := P_GLOBAL_INFORMATION_OLD.MEMBER_BIN ;
    P_GLOBAL_INFORMATION.BANK_CURRENCY_CODE         := P_GLOBAL_INFORMATION_OLD.BANK_CURRENCY_CODE ;
    P_GLOBAL_INFORMATION.SETTLEMENT_CURRENCY        := P_GLOBAL_INFORMATION_OLD.SETTLEMENT_CURRENCY ;
    P_GLOBAL_INFORMATION.SETTLEMENT_CURRENCY_EXP    := P_GLOBAL_INFORMATION_OLD.SETTLEMENT_CURRENCY_EXP ;
    P_GLOBAL_INFORMATION.COUNTRY_CODE               := P_GLOBAL_INFORMATION_OLD.COUNTRY_CODE ;
    P_GLOBAL_INFORMATION.FILE_NAME                  := P_GLOBAL_INFORMATION_OLD.FILE_NAME ;
    P_GLOBAL_INFORMATION.FILE_TYPE                  := P_GLOBAL_INFORMATION_OLD.FILE_TYPE ;
    P_GLOBAL_INFORMATION.OUTGOING_FILE_ID           := P_GLOBAL_INFORMATION_OLD.OUTGOING_FILE_ID ;
    P_GLOBAL_INFORMATION.FILE_SEQUENCE              := P_GLOBAL_INFORMATION_OLD.FILE_SEQUENCE ;
    P_GLOBAL_INFORMATION.MESSAGE_NUMBER             := P_GLOBAL_INFORMATION_OLD.MESSAGE_NUMBER ;
    P_GLOBAL_INFORMATION.SETTLEMENT_METHOD          := P_GLOBAL_INFORMATION_OLD.SETTLEMENT_METHOD ;
    P_GLOBAL_INFORMATION.MESSAGE_TYPE               := P_GLOBAL_INFORMATION_OLD.MESSAGE_TYPE ;
    P_GLOBAL_INFORMATION.PROCESSING_MODE            := P_GLOBAL_INFORMATION_OLD.PROCESSING_MODE ;
    P_GLOBAL_INFORMATION.CUTOFF_SEQUENCE            := P_GLOBAL_INFORMATION_OLD.CUTOFF_SEQUENCE ;
    P_GLOBAL_INFORMATION.FILE_SEQUENCE_NUMBER       := P_GLOBAL_INFORMATION_OLD.FILE_SEQUENCE_NUMBER ;
    P_GLOBAL_INFORMATION.SEPERATE_COLLECTION_FILE   := P_GLOBAL_INFORMATION_OLD.SEPERATE_COLLECTION_FILE ;
    P_GLOBAL_INFORMATION.COL_FILE_NAME              := P_GLOBAL_INFORMATION_OLD.COL_FILE_NAME ;
    P_GLOBAL_INFORMATION.COL_FILE_SEQUENCE          := P_GLOBAL_INFORMATION_OLD.COL_FILE_SEQUENCE ;
    P_GLOBAL_INFORMATION.COL_MESSAGE_NUMBER         := P_GLOBAL_INFORMATION_OLD.COL_MESSAGE_NUMBER ;
    P_GLOBAL_INFORMATION.CLEARING_CRITERIA          := P_GLOBAL_INFORMATION_OLD.CLEARING_CRITERIA ;

    RETURN(DECLARATION_CST.OK);

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE       :=  NULL;
    PCRD_GENERAL_TOOLS.PUT_TRACES (V_ENV_INFO_TRACE,$$PLSQL_LINE);
    RETURN( DECLARATION_CST.ERROR );
END SAVE_OR_ROLLB_GLOBAL_INFO;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--ATH25042012 START
FUNCTION    GENERATE_IPM_ADDEN_GEN_TICKET   (   P_TRANSACTION_HIST_RECORD       IN      TRANSACTION_HIST%ROWTYPE,
                                                P_GLOBAL_INFORMATION            IN OUT  PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION,
                                                P_TRANSACTION_HIST_AL_REC       IN      TRANSACTION_HIST_AL%ROWTYPE,
                                                P_IPM_OUTGOING_TABLE            IN OUT  IPM_OUTGOING_TABLE%ROWTYPE)
                                                RETURN PLS_INTEGER IS

V_IPM_PDS_SET                                   PCRD_IPM_GLOBAL_VARS.PDS_SET;
V_PDS_ITEMS                                     VARCHAR2(999);
V_BIT_MAP_STRING                                VARCHAR2(512);
RETURN_STATUS                                   PLS_INTEGER;
V_ENV_INFO_TRACE                                GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;
V_ORIGINAL_DE071                                IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071%TYPE;

BEGIN
    -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  'IPM';
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  'PCRD_IPM_OUTGOING_FINANC_1240';
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'GENERATE_IPM_ADDEN_GEN_TICKET';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------

    P_IPM_OUTGOING_TABLE.TRANSACTION_CODE_MTI       := '1644';
    P_IPM_OUTGOING_TABLE.FUNCTION_CODE_DE024        := '696';
    V_ORIGINAL_DE071                                := P_GLOBAL_INFORMATION.MESSAGE_NUMBER;
    P_IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071       := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;

    V_IPM_PDS_SET(0501).TAG         := '0501';
    V_IPM_PDS_SET(0501).TAG_LENGTH  := 16;
    V_IPM_PDS_SET(0501).TAG_DATA    := '01'
                                    || '000'
                                    || '001'
                                    || LPAD(V_ORIGINAL_DE071, 8, '0');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0501).TAG;

    V_IPM_PDS_SET(0505).TAG         := '0505';
    V_IPM_PDS_SET(0505).TAG_DATA    := TRIM(P_TRANSACTION_HIST_AL_REC.PASSENGER_NAME);
    V_IPM_PDS_SET(0505).TAG_LENGTH  := LENGTH(V_IPM_PDS_SET(0505).TAG_DATA);
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0505).TAG;

    V_IPM_PDS_SET(0506).TAG         := '0506';
    V_IPM_PDS_SET(0506).TAG_LENGTH  := 15;
    V_IPM_PDS_SET(0506).TAG_DATA    := RPAD(TRIM(P_TRANSACTION_HIST_AL_REC.TICKET_NUMBER), 15, ' ');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0506).TAG;

    V_IPM_PDS_SET(0507).TAG         := '0507';
    V_IPM_PDS_SET(0507).TAG_LENGTH  := 4;
    V_IPM_PDS_SET(0507).TAG_DATA    := RPAD(TRIM(P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_1), 4, ' ');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0507).TAG;

    V_IPM_PDS_SET(0508).TAG         := '0508';
--H.Z241105
--    V_IPM_PDS_SET(0508).TAG_DATA    := TRIM(P_TRANSACTION_HIST_AL_REC.CUSTOMER_CODE);
    V_IPM_PDS_SET(0508).TAG_DATA    := NVL(TRIM(P_TRANSACTION_HIST_AL_REC.CUSTOMER_CODE), 'X');
    V_IPM_PDS_SET(0508).TAG_LENGTH  := LENGTH(V_IPM_PDS_SET(0508).TAG_DATA);
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0508).TAG;

    V_IPM_PDS_SET(0512).TAG         := '0512';
    V_IPM_PDS_SET(0512).TAG_LENGTH  := 12;
    V_IPM_PDS_SET(0512).TAG_DATA    := TO_CHAR(P_TRANSACTION_HIST_RECORD.TRANSACTION_AMOUNT
                                    *  POWER(10, P_TRANSACTION_HIST_RECORD.TRANSACTION_CURRENCY_EXP), 'FM000000000000');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0512).TAG;

    RETURN_STATUS := PCRD_IPM_TOOLS_3.PDS_SET_ASSEMBLER  (  V_IPM_PDS_SET,
                                                            V_PDS_ITEMS  ,
                                                            P_IPM_OUTGOING_TABLE.ADDITIONAL_DATA_DE048);
    IF  RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ERROR WHEN CALLING PCRD_IPM_TOOLS_3.PDS_SET_ASSEMBLER';
        PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
        RETURN  DECLARATION_CST.ERROR;
    END IF;

    IF P_IPM_OUTGOING_TABLE.TRANSACTION_LIF_CYC_ID_DE063 IS NOT NULL
    THEN
        V_BIT_MAP_STRING := ' 024 032 033 048 063 071 094 ';
    ELSE
        V_BIT_MAP_STRING := ' 024 032 033 048 071 094 ';
    END IF;

    RETURN_STATUS := PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP(   V_BIT_MAP_STRING,
                                                        P_IPM_OUTGOING_TABLE.BIT_MAP_1_DE000,
                                                        P_IPM_OUTGOING_TABLE.BIT_MAP_2_DE001);
    IF  RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP';
        PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
        RETURN  RETURN_STATUS;
    END IF;

    P_IPM_OUTGOING_TABLE.FILE_NAME_DE101  :=    P_GLOBAL_INFORMATION.FILE_NAME;


    RETURN_STATUS := PCRD_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE ( P_IPM_OUTGOING_TABLE );
    IF  RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR RETURNED BY HPS_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE';
        PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
        RETURN RETURN_STATUS;
    END IF;

    P_GLOBAL_INFORMATION.MESSAGE_NUMBER    := P_GLOBAL_INFORMATION.MESSAGE_NUMBER  + 1;

    RETURN  DECLARATION_CST.OK;

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ORACLE GENERAL ERROR :' ||  SUBSTR(SQLERRM,1,100);
    PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
    RETURN  DECLARATION_CST.ERROR;
END GENERATE_IPM_ADDEN_GEN_TICKET ;
------------------------------------------------------------------------------------------------------------------------
FUNCTION    GENERATE_TRIP_DATA  (   P_IPM_OUTGOING_TABLE            IN OUT NOCOPY   IPM_OUTGOING_TABLE%ROWTYPE,
                                    P_GLOBAL_INFORMATION            IN OUT          PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION,
                                    P_DEPARTURE_TIME                IN              TRANSACTION_HIST_AL.DEPARTURE_TIME%TYPE,
                                    P_CARRIER_CODE                  IN              TRANSACTION_HIST_AL.CARRIER_CODE_1%TYPE,
                                    P_SERVICE_CLASS                 IN              TRANSACTION_HIST_AL.SERVICE_CLASS_1%TYPE,
                                    P_ORIGINATION_CITY_AIRPORT      IN              TRANSACTION_HIST_AL.ORIGINATION_CITY_AIRPORT_1%TYPE,
                                    P_DESTINATION_CITY_AIRPORT      IN              TRANSACTION_HIST_AL.DESTINATION_CITY_AIRPORT_1%TYPE,
                                    P_STOP_OVER                     IN              TRANSACTION_HIST_AL.STOP_OVER_1%TYPE,
                                    P_FARE_BASIS_CODE               IN              TRANSACTION_HIST_AL.FARE_BASIS_CODE_1%TYPE,
                                    P_ORIGINAL_DE071                IN              IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071%TYPE,
                                    P_COUNTER                       IN              PLS_INTEGER)
                                    RETURN PLS_INTEGER IS

V_IPM_PDS_SET                                   PCRD_IPM_GLOBAL_VARS.PDS_SET;
V_PDS_ITEMS                                     VARCHAR2(999);
V_BIT_MAP_STRING                                VARCHAR2(512);
RETURN_STATUS                                   PLS_INTEGER;
V_ENV_INFO_TRACE                                GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;
V_COUNTER                                       PLS_INTEGER;
BEGIN
    -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  'IPM';
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  'PCRD_IPM_OUTGOING_FINANC_1240';
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'GENERATE_TRIP_DATA';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------

    V_IPM_PDS_SET(0501).TAG         := '0501';
    V_IPM_PDS_SET(0501).TAG_LENGTH  := 16;
    V_IPM_PDS_SET(0501).TAG_DATA    := '01'
                                    || '001'
                                    || TO_CHAR(P_COUNTER,'FM000')
--                                    || TO_CHAR(P_ORIGINAL_DE071,'FM00000000');
                                    || LPAD(P_ORIGINAL_DE071, 8, '0');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0501).TAG;

    V_IPM_PDS_SET(0520).TAG         := '0520';
    V_IPM_PDS_SET(0520).TAG_LENGTH  := 6;
    V_IPM_PDS_SET(0520).TAG_DATA    := TO_CHAR(P_DEPARTURE_TIME, 'RRMMDD');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0520).TAG;

    V_IPM_PDS_SET(0521).TAG         := '0521';
    V_IPM_PDS_SET(0521).TAG_LENGTH  := 2;
    V_IPM_PDS_SET(0521).TAG_DATA    := RPAD(P_CARRIER_CODE, 2, ' ');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0521).TAG;

    IF  NVL(TRIM(P_SERVICE_CLASS), '0')  <>  '0'
    THEN
        V_IPM_PDS_SET(0522).TAG         := '0522';
        V_IPM_PDS_SET(0522).TAG_LENGTH  := 2;
        V_IPM_PDS_SET(0522).TAG_DATA    := RPAD(P_SERVICE_CLASS, 2, ' ');
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0522).TAG;
    END IF;

    IF      NVL(TRIM(P_ORIGINATION_CITY_AIRPORT), '000')  <>  '000'
        AND LENGTH(TRIM(P_ORIGINATION_CITY_AIRPORT))      <>  1
    THEN
        V_IPM_PDS_SET(0523).TAG         := '0523';
        V_IPM_PDS_SET(0523).TAG_LENGTH  := 5;
        V_IPM_PDS_SET(0523).TAG_DATA    := RPAD(P_ORIGINATION_CITY_AIRPORT, 5, ' ');
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0523).TAG;
    END IF;

    IF      NVL(TRIM(P_DESTINATION_CITY_AIRPORT), '000')  <>  '000'
        AND LENGTH(TRIM(P_DESTINATION_CITY_AIRPORT))      <>  1
    THEN
        V_IPM_PDS_SET(0524).TAG         := '0524';
        V_IPM_PDS_SET(0524).TAG_LENGTH  := 5;
        V_IPM_PDS_SET(0524).TAG_DATA    := RPAD(P_DESTINATION_CITY_AIRPORT, 5, ' ');
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0524).TAG;
    END IF;

    V_IPM_PDS_SET(0525).TAG         := '0525';
    V_IPM_PDS_SET(0525).TAG_LENGTH  := 1;
    V_IPM_PDS_SET(0525).TAG_DATA    := NVL(P_STOP_OVER, ' ');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0525).TAG;

    IF  NVL(TRIM(P_FARE_BASIS_CODE), RPAD('0', 15, '0'))  <>  RPAD('0', 15, '0')
    THEN
        V_IPM_PDS_SET(0529).TAG         := '0529';
        V_IPM_PDS_SET(0529).TAG_LENGTH  := 5;
        V_IPM_PDS_SET(0529).TAG_DATA    := TRIM(P_FARE_BASIS_CODE);
        V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0529).TAG;
    END IF;

    V_IPM_PDS_SET(0530).TAG         := '0530';
    V_IPM_PDS_SET(0530).TAG_LENGTH  := 5;
    V_IPM_PDS_SET(0530).TAG_DATA    := RPAD(P_CARRIER_CODE, 2, ' ')
                                    || RPAD(NVL(P_SERVICE_CLASS, ' '), 2, ' ')
                                    || NVL(P_STOP_OVER, ' ');
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0530).TAG;

    V_IPM_PDS_SET(0531).TAG         := '0531';
    V_IPM_PDS_SET(0531).TAG_LENGTH  := 6;
    V_IPM_PDS_SET(0531).TAG_DATA    := TO_CHAR(P_DEPARTURE_TIME, 'HH24MI') || ' ';
    V_PDS_ITEMS                     := V_PDS_ITEMS || V_IPM_PDS_SET(0531).TAG;

    RETURN_STATUS := PCRD_IPM_TOOLS_3.PDS_SET_ASSEMBLER  (  V_IPM_PDS_SET,
                                                            V_PDS_ITEMS  ,
                                                            P_IPM_OUTGOING_TABLE.ADDITIONAL_DATA_DE048);
    IF (RETURN_STATUS <> DECLARATION_CST.OK)
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_TOOLS_3.PDS_SET_ASSEMBLER';
        PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
        RETURN( DECLARATION_CST.ERROR );
    END IF;

    IF P_IPM_OUTGOING_TABLE.TRANSACTION_LIF_CYC_ID_DE063 IS NOT NULL
    THEN
        V_BIT_MAP_STRING := ' 024 032 033 048 063 071 094 ';
    ELSE
        V_BIT_MAP_STRING := ' 024 032 033 048 071 094 ';
    END IF;

    RETURN_STATUS := PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP(   V_BIT_MAP_STRING,
                                                        P_IPM_OUTGOING_TABLE.BIT_MAP_1_DE000,
                                                        P_IPM_OUTGOING_TABLE.BIT_MAP_2_DE001);
    IF  RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR WHEN CALLING PCRD_IPM_TOOLS_4.AFFECT_BIT_MAP';
        PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
        RETURN  RETURN_STATUS;
    END IF;

    P_IPM_OUTGOING_TABLE.FILE_NAME_DE101  :=    P_GLOBAL_INFORMATION.FILE_NAME;


    RETURN_STATUS := PCRD_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE ( P_IPM_OUTGOING_TABLE );
    IF  RETURN_STATUS <> DECLARATION_CST.OK
    THEN
        V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR RETURNED BY HPS_IPM_INSERT.INSERT_IPM_OUTGOING_TABLE';
        PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
        RETURN RETURN_STATUS;
    END IF;

    P_GLOBAL_INFORMATION.MESSAGE_NUMBER    := P_GLOBAL_INFORMATION.MESSAGE_NUMBER  + 1;

    RETURN  DECLARATION_CST.OK;

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ORACLE GENERAL ERROR :' ||  SUBSTR(SQLERRM,1,100);
    PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
    RETURN  DECLARATION_CST.ERROR;
END GENERATE_TRIP_DATA ;
------------------------------------------------------------------------------------------------------------------------
FUNCTION    GENERATE_IPM_ADDEN_TRIP_DATA    (   P_TRANSACTION_HIST_RECORD       IN      TRANSACTION_HIST%ROWTYPE,
                                                P_GLOBAL_INFORMATION            IN OUT  PCRD_IPM_GLOBAL_VARS.TRANSACTION_GLOBAL_INFORMATION,
                                                P_TRANSACTION_HIST_AL_REC       IN      TRANSACTION_HIST_AL%ROWTYPE,
                                                P_IPM_OUTGOING_TABLE            IN OUT  IPM_OUTGOING_TABLE%ROWTYPE)
                                                RETURN PLS_INTEGER IS

V_IPM_PDS_SET                                   PCRD_IPM_GLOBAL_VARS.PDS_SET;
V_PDS_ITEMS                                     VARCHAR2(999);
V_BIT_MAP_STRING                                VARCHAR2(512);
RETURN_STATUS                                   PLS_INTEGER;
V_ENV_INFO_TRACE                                GLOBAL_VARS.ENV_INFO_TRACE_TYPE := NULL;
V_COUNTER                                       PLS_INTEGER := 1;
V_ORIGINAL_DE071                                IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071%TYPE;
BEGIN
    -------- TRACE RECRORD INITIALISATION-----------------------------
    V_ENV_INFO_TRACE.USER_NAME      :=  GLOBAL_VARS.USER_NAME;
    V_ENV_INFO_TRACE.MODULE_CODE    :=  'IPM';
    V_ENV_INFO_TRACE.PACKAGE_NAME   :=  'PCRD_IPM_OUTGOING_FINANC_1240';
    V_ENV_INFO_TRACE.FUNCTION_NAME  :=  'GENERATE_IPM_ADDEN_TRIP_DATA';
    V_ENV_INFO_TRACE.LANG           :=  GLOBAL_VARS.LANG;
    ------------------------------------------------------------------

    P_IPM_OUTGOING_TABLE.TRANSACTION_CODE_MTI       := '1644';
    P_IPM_OUTGOING_TABLE.FUNCTION_CODE_DE024        := '696';
    V_ORIGINAL_DE071                                :=  P_GLOBAL_INFORMATION.MESSAGE_NUMBER - 1;

    IF  TRIM(P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_1)  IS NOT NULL
    THEN
        P_IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071       := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;
        V_COUNTER   :=  V_COUNTER + 1;

        RETURN_STATUS   :=  PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA    (   P_IPM_OUTGOING_TABLE                        ,
                                                                                    P_GLOBAL_INFORMATION                        ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DEPARTURE_TIME    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_1    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.SERVICE_CLASS_1   ,
                                                                                    P_TRANSACTION_HIST_AL_REC.ORIGINATION_CITY_AIRPORT_1    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DESTINATION_CITY_AIRPORT_1    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.STOP_OVER_1                   ,
                                                                                    P_TRANSACTION_HIST_AL_REC.FARE_BASIS_CODE_1             ,
                                                                                    V_ORIGINAL_DE071                                        ,
                                                                                    V_COUNTER                                               );

        IF  RETURN_STATUS   <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR RETURNED BY PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA';
            PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  200 );
            RETURN  RETURN_STATUS;
        END IF;
    END IF;

    IF  TRIM(P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_2)  IS NOT NULL
    THEN
        P_IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071       := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;
        V_COUNTER   :=  V_COUNTER + 1;

        RETURN_STATUS   :=  PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA    (   P_IPM_OUTGOING_TABLE                                    ,
                                                                                    P_GLOBAL_INFORMATION                                    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DEPARTURE_TIME                ,
                                                                                    P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_2                ,
                                                                                    P_TRANSACTION_HIST_AL_REC.SERVICE_CLASS_2               ,
                                                                                    P_TRANSACTION_HIST_AL_REC.ORIGINATION_CITY_AIRPORT_2    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DESTINATION_CITY_AIRPORT_2    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.STOP_OVER_2                   ,
                                                                                    P_TRANSACTION_HIST_AL_REC.FARE_BASIS_CODE_2             ,
                                                                                    V_ORIGINAL_DE071                                        ,
                                                                                    V_COUNTER                                               );

        IF  RETURN_STATUS   <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR RETURNED BY PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA';
            PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  300 );
            RETURN  RETURN_STATUS;
        END IF;

    END IF;

    IF  TRIM(P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_3)  IS NOT NULL
    THEN
        P_IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071       := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;
        V_COUNTER   :=  V_COUNTER + 1;

        RETURN_STATUS   :=  PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA    (   P_IPM_OUTGOING_TABLE                                    ,
                                                                                    P_GLOBAL_INFORMATION                                    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DEPARTURE_TIME                ,
                                                                                    P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_3                ,
                                                                                    P_TRANSACTION_HIST_AL_REC.SERVICE_CLASS_3               ,
                                                                                    P_TRANSACTION_HIST_AL_REC.ORIGINATION_CITY_AIRPORT_3    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DESTINATION_CITY_AIRPORT_3    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.STOP_OVER_3                   ,
                                                                                    P_TRANSACTION_HIST_AL_REC.FARE_BASIS_CODE_3             ,
                                                                                    V_ORIGINAL_DE071                                        ,
                                                                                    V_COUNTER                                               );

        IF  RETURN_STATUS   <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR RETURNED BY PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA';
            PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  400 );
            RETURN  RETURN_STATUS;
        END IF;

    END IF;

    IF  TRIM(P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_4)  IS NOT NULL
    THEN
        P_IPM_OUTGOING_TABLE.MESSAGE_NUMBER_DE071       := P_GLOBAL_INFORMATION.MESSAGE_NUMBER + 1;
        V_COUNTER   :=  V_COUNTER + 1;

        RETURN_STATUS   :=  PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA    (   P_IPM_OUTGOING_TABLE                                    ,
                                                                                    P_GLOBAL_INFORMATION                                    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DEPARTURE_TIME                ,
                                                                                    P_TRANSACTION_HIST_AL_REC.CARRIER_CODE_4                ,
                                                                                    P_TRANSACTION_HIST_AL_REC.SERVICE_CLASS_4               ,
                                                                                    P_TRANSACTION_HIST_AL_REC.ORIGINATION_CITY_AIRPORT_4    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.DESTINATION_CITY_AIRPORT_4    ,
                                                                                    P_TRANSACTION_HIST_AL_REC.STOP_OVER_4                   ,
                                                                                    P_TRANSACTION_HIST_AL_REC.FARE_BASIS_CODE_4             ,
                                                                                    V_ORIGINAL_DE071                                        ,
                                                                                    V_COUNTER                                               );

        IF  RETURN_STATUS   <>  DECLARATION_CST.OK
        THEN
            V_ENV_INFO_TRACE.USER_MESSAGE       :=  'ERROR RETURNED BY PCRD_IPM_OUTGOING_FINANC_1240.GENERATE_TRIP_DATA';
            PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  400 );
            RETURN  RETURN_STATUS;
        END IF;
    END IF;

    RETURN  DECLARATION_CST.OK;

EXCEPTION
WHEN OTHERS THEN
    V_ENV_INFO_TRACE.USER_MESSAGE   :=  'ORACLE GENERAL ERROR :' ||  SUBSTR(SQLERRM,1,100);
    PCRD_GENERAL_TOOLS.PUT_TRACES   (V_ENV_INFO_TRACE,  100 );
    RETURN  DECLARATION_CST.ERROR;
END GENERATE_IPM_ADDEN_TRIP_DATA;
------------------------------------------------------------------------------------------------------------------------
--ATH25042012 END
END PCRD_IPM_OUTGOING_FINANC_1240;
/


-- END OF DDL SCRIPT FOR PACKAGE BODY POWERV3PBO.PCRD_IPM_OUTGOING_FINANC_1240

